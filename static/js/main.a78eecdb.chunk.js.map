{"version":3,"sources":["main/m1-ui/common/Preloader/Preloader.tsx","main/m1-ui/f2-table/a3-TableOfProfile/TableProfile.tsx","main/m3-dal/login-api.ts","main/m2-bll/app-reducer.ts","main/m1-ui/utils/error-utils.ts","main/m2-bll/auth-reducer.ts","main/m3-dal/tableApi.ts","main/m2-bll/table-reduser.ts","main/m2-bll/profile-reducer.ts","main/m1-ui/f5-profile/ProfilePage.tsx","main/m1-ui/common/header/HeaderNavbar.tsx","main/m1-ui/f6-files/File/Video.tsx","main/m1-ui/f6-files/File/Files.tsx","main/m1-ui/f6-files/File/getFile.ts","main/m1-ui/common/Star/Star.tsx","main/m1-ui/f3-play/a1-PlayPage/CardsControlButtons.tsx","main/m1-ui/f3-play/a1-PlayPage/Card.tsx","main/m1-ui/f3-play/a1-PlayPage/Play.tsx","main/m1-ui/common/ErrorSnackbar/ErrorSnackbar.tsx","main/m1-ui/f4-settings/SettingPage.tsx","main/m1-ui/common/Modal/modal.tsx","main/m1-ui/common/Modal/modalInput2.tsx","main/m1-ui/f2-table/a1-TableOfPacks/TablePacks.tsx","main/m1-ui/common/Paginator/Paginator.tsx","main/m1-ui/common/Modal/modalInput.tsx","main/m1-ui/f2-table/a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch.tsx","main/m1-ui/f2-table/a1-TableOfPacks/PacksPage.tsx","main/m1-ui/f2-table/a2-TableOfCards/TableCards.tsx","main/m1-ui/common/Modal/addNewCardModal.tsx","main/m1-ui/f2-table/a2-TableOfCards/CardsPage.tsx","main/m1-ui/Content.tsx","main/m3-dal/register-api.ts","main/m2-bll/registration-reducer.ts","main/m1-ui/f1-auth/a2-registration/RegistrationPage.tsx","main/m3-dal/password-recovery-api.ts","main/m2-bll/password-reset-reducer.ts","main/m2-bll/password-gereration-reducer.ts","main/m1-ui/f1-auth/a3-password_recovery/GenerateNewPasswordPage.tsx","main/m1-ui/f1-auth/a3-password_recovery/ResetPasswordPage.tsx","main/m1-ui/f1-auth/a1-login/LoginPage.tsx","main/m1-ui/App.tsx","serviceWorker.ts","main/m2-bll/store.ts","index.tsx","main/m1-ui/f2-table/a1-TableOfPacks/css.module.css","main/m1-ui/f3-play/a1-PlayPage/css.module.css","main/m1-ui/common/header/headerNavbar.module.css","main/m1-ui/f5-profile/styleProfilaPage.module.css","main/m1-ui/f2-table/a3-TableOfProfile/css.module.css","main/m1-ui/common/Paginator/css.module.css","main/m1-ui/f2-table/a2-TableOfCards/css.module.css"],"names":["Preloader","className","ColumnsName","props","style","Content","map","e","width","TableWidth","length","height","TableHeight","substring","RowContent","rowContent","Data","i","name","cardsCount","grade","TableForProfile","TableStyle","document","getElementById","window","getComputedStyle","box","Table","id","HeaderTable","columnsName","ContentTable","buttonsData","instance","axios","create","baseURL","withCredentials","authAPI","login","data","post","logout","delete","authMe","profileUpdatePhoto","put","avatar","initialState","setAppErrorAC","error","type","handleServerNetworkError","dispatch","response","message","status","isInitialized","isLoginIn","UserData","created","email","isAdmin","publicCardPacksCount","rememberMe","token","tokenDeathTime","updated","verified","__v","_id","setIsLoggedInAC","value","setUsersDataAC","Userdata","setInitializedAC","TableApi","get","packName","min","max","sortPacks","page","pageCount","user_id","cardsPack_id","allPacks","cards","isLoading","paginator","currentPage","packsCount","startPage","endPage","getPacksTC","setIsLoadingAC","then","res","setAllPacksAC","cardPacks","setPacksTotalCountAC","cardPacksTotalCount","catch","updatePackTC","getData","getCardsTC","setCardsAC","updateCardTC","packId","gradeCardTC","updatedGrade","packs","count","setStartPagePaginatorAC","setEndPagePaginatorAC","setCurrentPagerAC","myPacks","changeUserDataTC","updatedUser","ProfilePage","useSelector","state","auth","PacksData","profilePage","useDispatch","useEffect","MainContainer","Photo","src","ProfileInfo","InfoItem","HeaderNavbar","logoutHandler","useCallback","Navbar","NavbarItem","activeClassName","Active","to","onClick","Video","fileURL","videoRef","useRef","useState","duration","setDuration","controls","setControls","currentTime","setCurrentTime","setInterval","current","play","display","flexFlow","alignItems","justifyContent","checked","onChange","currentTarget","ref","pause","requestFullscreen","console","log","volume","playbackRate","frameBorder","allow","allowFullScreen","Files","n","inRef","code","setCode","base64","setBase64","text","setText","file","setFile","setFileURL","file64","setFile64","fileData","setFileData","accept","multiple","alt","lastModified","size","toFixed","reader","FileReader","formData","FormData","newFile","target","files","URL","createObjectURL","append","onloadend","result","readAsDataURL","readAsText","click","fileName","link","createElement","href","download","body","appendChild","removeChild","writeFile","url","responseType","blob","Blob","downloadUrl","setAttribute","remove","StarRead","Box","component","mb","borderColor","Rating","readOnly","StarChange","event","newValue","setValue","CardsControlButtons","controlButton","buttonNext","card_id","cardId","closeAnswer","starsGo","Card","cardPack","cardBorder","stars","currentCard","question","answer","openAnswer","ansVisibility","Play","useParams","CardsData","table","setAnsVisibility","card","rollGrade","FilterArray","filter","Math","round","a","random","currentCardForDraw","setTimeout","Alert","elevation","variant","ErrorSnackbar","app","handleClose","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","margin","backgroundColor","palette","secondary","main","form","submit","SettingsPage","classes","loading","passwordResetPage","formik","useFormik","validate","values","initialValues","onSubmit","Container","maxWidth","CssBaseline","Typography","handleSubmit","TextField","required","fullWidth","autoComplete","label","getFieldProps","errors","Button","color","getModalStyle","top","left","transform","createStyles","position","background","border","boxShadow","shadows","padding","SimpleModal","setModalOpen","onButtonClick","React","modalStyle","Modal","aria-labelledby","aria-describedby","SimpleUpdatePackInput","deckCover","setGrade","rating","setRating","setName","InputLabel","Number","buttonStyle","Buttons","deleteOpen","setDeleteOpen","update","setUpdateOpen","onclick","Handler","date","TableForPacks","rowsCount","Paginator","startValue","buttons","maxPages","Main","Pagination","startButton","goStart","b","goPage","endValue","endButton","goFinish","SimpleModalInput","title","setTitle","RangeSlider","draggableTrack","maxValue","minValue","PackPage","history","useHistory","paginatorData","valueSearch","setValueSearch","valueRange","setValueRange","ceil","searchChangeValue","goSearchName","goSearchCards","getAllPacks","getMyPacks","addOpen","setAddModalOpen","cardsPack","SearchPanel","desktopPanel","refresh","placeholder","slider","mobilePanel","firstBlock","secondBlock","push","PackId","shots","TableForCards","rand","AddNewCardModal","setQuestion","setAnswer","CardPage","addCardModalOpen","setAddCardModalOpen","deleteCardTC","exact","path","render","registrationApi","isRegistered","setIsRegistratedAC","Copyright","align","Link","Date","getFullYear","RegistrationPage","registrationPage","checkEmail","checkPassword","test","password","registrationTC","Avatar","autoFocus","Grid","container","item","xs","mt","passwordRecoveryApi","newPasswordData","setLoadingAC","GenerateNewPasswordPage","passwordGenerationPage","alert","info","setNewPasswordTC","resetPasswordToken","ResetPasswordPage","from","LoginPage","FormControlLabel","control","Checkbox","App","Boolean","location","hostname","match","rootReducer","combineReducers","action","CopyState","searchValue","RegExp","matchValue","filterPacks","pack","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a78eecdb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./preloader.scss\"\r\nexport function Preloader() {\r\nreturn <div className='cssload-loader'>\r\n    <div className='cssload-inner cssload-one'></div>\r\n    <div className='cssload-inner cssload-two'></div>\r\n    <div className='cssload-inner cssload-three'></div>\r\n</div>\r\n\r\n}","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../m2-bll/table-reduser\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\nexport const buttonStyle = {margin: \"5px\", width: \"20px\", height: \" 20px\"}\r\n\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?: string, rating?: number, grade?: number, deckCover?: string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n    TableWidth: string\r\n    TableHeight: string\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n    TableWidth: string\r\n    TableHeight: string\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: string) => {\r\n            return <div style={{\r\n                width: `calc(${props.TableWidth}/${props.Content.length})`,\r\n                height: `calc(${props.TableHeight}/10)`\r\n            }}>{e.length > 11 ? e.substring(0, 10) : e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    TableWidth={props.TableWidth} TableHeight={props.TableHeight}\r\n                    Content={[i.name, i.cardsCount, i.grade]}/>\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForProfile(props: TablePropsType) {\r\n    let TableStyle = document.getElementById(\"Table\")\r\n    let TableWidth = \"\"\r\n    let TableHeight = \"\"\r\n    if (TableStyle) {\r\n        TableWidth = window.getComputedStyle(TableStyle).width\r\n        TableHeight = window.getComputedStyle(TableStyle).height\r\n    }\r\n    return (<div className={style.box}>\r\n            <div className={style.Table} id={\"Table\"}>\r\n                {TableStyle ? <>\r\n                        <div className={style.HeaderTable}>\r\n                            <ColumnsName Content={props.columnsName} TableWidth={TableWidth} TableHeight={TableHeight}/>\r\n                        </div>\r\n                        <div className={style.ContentTable}>\r\n                            <RowContent Data={props.rowContent} buttonsData={props.buttonsData} TableWidth={TableWidth}\r\n                                        TableHeight={TableHeight}/>\r\n                        </div>\r\n                    </>\r\n                    : <></>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForProfile;","import axios from 'axios'\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\", //\"http://localhost:7542/2.0\" ,\r\n    ...settings\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        const promise = instance.post('auth/login', data);\r\n        return promise;\r\n    },\r\n    logout() {\r\n        const promise = instance.delete('auth/me');\r\n        return promise;\r\n    },\r\n    authMe() {\r\n        const promise = instance.post('auth/me',{},{});\r\n        return promise\r\n    },\r\n    profileUpdatePhoto(data:profileUpdatePhoto) {\r\n        return instance.put('auth/me', {name:data.name,avatar:data.avatar});\r\n    }\r\n}\r\n\r\n// types\r\nexport type LoginParamsType = {\r\n    password: string\r\n    rememberMe: boolean\r\n    email: string;\r\n}\r\nexport type profileUpdatePhoto = {\r\n    name:string\r\n    avatar:string|File\r\n}\r\n\r\n\r\n","const initialState: InitialStateType = {\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case'APP/SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const)\r\nexport const setAppStatusAC = (status:  RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const)\r\nexport const setAppInitializedAC = (isInitialized:  boolean) => ({ type: 'APP/SET-INITIALIZED', isInitialized } as const)\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppInitializedActionType = ReturnType<typeof setAppInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | SetAppInitializedActionType\r\n\r\n\r\nexport type InitialStateType = any\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType, setAppStatusAC} from '../../m2-bll/app-reducer'\r\n\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, LoginParamsType} from \"../m3-dal/login-api\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nexport type userDate = {\r\n    avatar: string ,\r\n    created:  string | null,\r\n    email:  string | null,\r\n    isAdmin: boolean | null\r\n    name:  string ,\r\n    publicCardPacksCount: string | null,\r\n    rememberMe: boolean | null\r\n    token:  string | null,\r\n    tokenDeathTime:  string | null,\r\n    updated:  string | null,\r\n    verified: boolean | null\r\n    __v:  string | null,\r\n    _id:  string ,\r\n\r\n}\r\n\r\ntype InitialStateType = {\r\n    isInitialized:boolean,\r\n    isLoginIn: boolean,\r\n    UserData: userDate\r\n}\r\nconst initialState: InitialStateType = {\r\n    isInitialized: false,\r\n    isLoginIn: false,\r\n    UserData: {\r\n        avatar: \"\",\r\n        created: null,\r\n        email: null,\r\n        isAdmin: false,\r\n        name: \"\",\r\n        publicCardPacksCount:null,\r\n        rememberMe: false,\r\n        token: null,\r\n        tokenDeathTime: null,\r\n        updated: null,\r\n        verified: false,\r\n        __v: null,\r\n        _id: \"\",\r\n    }\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-LOGIN-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-IS-LOGOUT-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-USER-DATA-IN':\r\n            return {...state, UserData: action.Userdata}\r\n        case'SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGIN-IN', value} as const)\r\nexport const setUsersDataAC = (Userdata: userDate) =>\r\n    ({type: 'SET-USER-DATA-IN', Userdata} as const)\r\nexport const setIsLogoutInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGOUT-IN', value} as const)\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: 'SET-INITIALIZED', isInitialized} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: ThunkDispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\nexport const authMeTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.authMe()\r\n        .then(res => {\r\n                    dispatch(setUsersDataAC(res.data))\r\n                    dispatch(setIsLoggedInAC(true))\r\n            }).catch((e) => {\r\n        dispatch(setIsLoggedInAC(false))\r\n    })\r\n}\r\nexport const isInitializedTC = () => (dispatch: any) => {\r\n    authAPI.authMe()\r\n    .then(res => {\r\n        dispatch(setUsersDataAC(res.data))\r\n        dispatch(setIsLoggedInAC(true))\r\n        dispatch(setInitializedAC(true))\r\n    }).catch((e) => {\r\n        dispatch(setIsLoggedInAC(false))\r\n        dispatch(setInitializedAC(true))\r\n    })\r\n    dispatch(setInitializedAC(true))\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\n    | ReturnType<typeof setIsLogoutInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n\r\n\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\", //\"http://localhost:7542/2.0\" ,\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const TableApi = {\r\n    getPacks(data: GetPacksDataType) {\r\n        const promise = instance.get(`cards/pack?\\\r\n&packName=${data.packName ? data.packName : \"\"}\\\r\n&min=${data.min ? data.min : \"\"}\\\r\n&max=${data.max ? data.max : \"\"}\\\r\n&sortPacks=${data.sortPacks ? data.sortPacks : \"\"}\\\r\n&page=${data.page ? data.page : \"\"}\\\r\n&pageCount=${data.pageCount ? data.pageCount : \"25\"}\\\r\n&user_id=${data.user_id ? data.user_id : \"\"}`);\r\n        return promise;\r\n    },\r\n    addPack(data: AddPackDataType) {\r\n        const promise = instance.post('cards/pack', data);\r\n        return promise;\r\n    },\r\n    deletePack(data: string) {\r\n        const promise = instance.delete(`cards/pack?id=${data}`);\r\n        return promise;\r\n    },\r\n    updatePack(data: UpdatePackDataType) {\r\n        const promise = instance.put('cards/pack', data);\r\n        return promise;\r\n    },\r\n    getCards(data: GetCardsDataType) {\r\n        const promise = instance.get(`cards/card?&cardsPack_id=${data.cardsPack_id}&pageCount=100`);\r\n        return promise;\r\n    },\r\n    addCard(data: AddCardDataType) {\r\n        const promise = instance.post('cards/card', data);\r\n        return promise;\r\n    },\r\n    deleteСard(data: string) {\r\n        const promise = instance.delete(`cards/card?id=${data}`);\r\n        return promise;\r\n    },\r\n    updateСard(data: UpdateCardDataType) {\r\n        const promise = instance.put(`cards/card`, data);\r\n        return promise;\r\n    },\r\n    gradeСard(data: GradeCardDataType) {\r\n        const promise = instance.put(`cards/grade`, data);\r\n        return promise;\r\n    },\r\n}\r\nexport type GetPacksDataType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\nexport type AddPackDataType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: false\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdatePackDataType = {\r\n    cardsPack: {\r\n        _id: string\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: false\r\n        type?: string\r\n    }\r\n}\r\nexport type GetCardsDataType = {\r\n    cardsPack_id: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateCardDataType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        comments?: string\r\n    }\r\n    packId: string\r\n\r\n}\r\nexport type DeleteCardDataType = {\r\n    cardId: string\r\n    packId: string\r\n}\r\n\r\nexport type GradeCardDataType = {\r\n    grade: number\r\n    card_id: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    AddCardDataType,\r\n    AddPackDataType, DeleteCardDataType,\r\n    GetCardsDataType, GetPacksDataType, GradeCardDataType,\r\n    TableApi,\r\n    UpdateCardDataType,\r\n    UpdatePackDataType\r\n} from \"../m3-dal/tableApi\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\nexport type PaginatorType = {\r\n    packsCount: number\r\n    startPage: number\r\n    endPage: number\r\n    currentPage: number\r\n}\r\ntype StateType = {\r\n    cards: any\r\n    allPacks: any\r\n    isLoading: boolean\r\n    paginator: PaginatorType\r\n}\r\n\r\nconst initialState: StateType = {\r\n    allPacks: null,\r\n    cards: null,\r\n    isLoading: false,\r\n    paginator: {\r\n        currentPage: 1,\r\n        packsCount: 1,\r\n        startPage: 1,\r\n        endPage: 5,\r\n    }\r\n\r\n}\r\n\r\nexport const tableReducer = (state = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case 'SET-ALL-PACKS':\r\n            return {...state, allPacks: action.packs}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'SET-COUNT': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.packsCount = action.count\r\n            return {...state, paginator: {...state.paginator, packsCount: action.count}}\r\n        }\r\n        case 'SET-START-VALUE-PR': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.startPage = action.value\r\n            return CopyState\r\n        }\r\n        case 'SET-END-VALUE-PR': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.endPage = action.value\r\n            return CopyState\r\n        }\r\n        case 'SET-CURRENT-PAGE': {\r\n            return {...state, paginator: {...state.paginator, currentPage: action.value}}\r\n        }\r\n        case 'FILTER-FOR SEARCH': {\r\n            let searchValue = new RegExp(action.matchValue, 'i');\r\n            let filterPacks = action.data.filter((pack) => pack.name.match(searchValue))\r\n            return {...state, allPacks: filterPacks, paginator: {...state.paginator, packsCount: filterPacks.length}}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\n\r\ntype ThunkDispatch = Dispatch<ActionType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\nexport const getPacksTC = (data:GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getPacks(data).then(res => {\r\n        dispatch(setAllPacksAC(res.data.cardPacks))\r\n        dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        dispatch(setIsLoadingAC(false))\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\n\r\nexport const addPackTC = (data: AddPackDataType, getData: GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addPack(data).then(res => {\r\n        TableApi.getPacks(getData).then(res => {\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deletePackTC = (data: string, getData: GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.deletePack(data).then(res => {\r\n        TableApi.getPacks(getData).then(res => {\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const updatePackTC = (data: UpdatePackDataType, getData: GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updatePack(data).then(res => {\r\n        debugger\r\n        TableApi.getPacks(getData).then(res => {\r\n            debugger\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\n\r\n\r\nexport const getCardsTC = (data: GetCardsDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getCards(data)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deleteCardTC = (data: DeleteCardDataType) => (dispatch: ThunkDispatch) => {\r\n    debugger\r\n    setIsLoadingAC(true)\r\n    TableApi.deleteСard(data.cardId).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const updateCardTC = (data: UpdateCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updateСard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const addCardTC = (data: AddCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addCard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.card.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\nexport const gradeCardTC = (data: GradeCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.gradeСard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: res.data.updatedGrade.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\n\r\nexport const setAllPacksAC = (packs: PackType) => ({type: 'SET-ALL-PACKS', packs} as const)\r\nexport const setIsLoadingAC = (value: boolean) => ({type: 'SET-IS-LOADING', value} as const)\r\nexport const setCardsAC = (cards: CardsType) => ({type: 'SET-CARDS', cards} as const)\r\nexport const setPacksTotalCountAC = (count: number) => ({type: 'SET-COUNT', count} as const)\r\nexport const setStartPagePaginatorAC = (value: number) => ({type: 'SET-START-VALUE-PR', value} as const)\r\nexport const setEndPagePaginatorAC = (value: number) => ({type: 'SET-END-VALUE-PR', value} as const)\r\nexport const setCurrentPagerAC = (value: number) => ({type: 'SET-CURRENT-PAGE', value} as const)\r\nexport const filterForSearchAC = (data: Array<any>,matchValue:string) => ({type: 'FILTER-FOR SEARCH', data,matchValue} as const)\r\n\r\ntype filterForSearchActionType = ReturnType<typeof filterForSearchAC>\r\ntype setCardsActionType = ReturnType<typeof setCardsAC>\r\ntype setAllPacksActionType = ReturnType<typeof setAllPacksAC>\r\ntype setLoadingActionType = ReturnType<typeof setIsLoadingAC>\r\ntype setPacksTotalCountActionType = ReturnType<typeof setPacksTotalCountAC>\r\nexport type setStartPagePaginatorActionType = ReturnType<typeof setStartPagePaginatorAC>\r\ntype setEndPagePaginatorActionType = ReturnType<typeof setEndPagePaginatorAC>\r\ntype setCurrentPagerActionType = ReturnType<typeof setCurrentPagerAC>\r\n\r\ntype ActionType = setLoadingActionType | setAllPacksActionType | setCardsActionType | setPacksTotalCountActionType |\r\n    setStartPagePaginatorActionType | setEndPagePaginatorActionType | setCurrentPagerActionType |\r\n    filterForSearchActionType\r\n\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n    deckCover: any\r\n}\r\nexport type CardsType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n    number?: number\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, profileUpdatePhoto} from \"../m3-dal/login-api\";\r\nimport {authMeTC, setIsLoggedInAC, setUsersDataAC} from \"./auth-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\nimport {GetPacksDataType, TableApi} from \"../m3-dal/tableApi\";\r\nimport {PackType, setAllPacksAC, setIsLoadingAC, setPacksTotalCountAC} from \"./table-reduser\";\r\n\r\ntype StateType = {\r\n    isInitialized: boolean,\r\n    myPacks: any\r\n}\r\n\r\nconst initialState: StateType = {\r\n    isInitialized: false,\r\n    myPacks: null\r\n}\r\n\r\nexport const ProfileReducer = (state = initialState, action: ActionsType):StateType  => {\r\n    switch (action.type) {\r\n        case 'SET-MY-PACKS':\r\n            return {...state, myPacks: action.packs}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setMyPacksAC = (packs: PackType) => ({type: 'SET-MY-PACKS', packs} as const)\r\n// thunk\r\nexport const getMyPacksTC = (data:GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getPacks(data).then(res => {\r\n        dispatch(setMyPacksAC(res.data.cardPacks))\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const changeUserDataTC = (data:profileUpdatePhoto) => (dispatch: ThunkDispatch) => {\r\n    authAPI.profileUpdatePhoto(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data.updatedUser))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\n// types\r\n\r\ntype setMyPacksActionType = ReturnType<typeof setMyPacksAC>\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\n    | setMyPacksActionType\r\n\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {userDate} from \"../../m2-bll/auth-reducer\";\r\nimport style from \"./styleProfilaPage.module.css\"\r\nimport TableForProfile from \"../f2-table/a3-TableOfProfile/TableProfile\";\r\nimport {PackType} from \"../../m2-bll/table-reduser\";\r\nimport {getMyPacksTC} from \"../../m2-bll/profile-reducer\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\nfunction ProfilePage() {\r\n    const {name, email, avatar, publicCardPacksCount, _id} = useSelector<AppRootStateType, userDate>((state) => state.auth.UserData)\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.profilePage.myPacks);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getMyPacksTC({user_id: _id}))\r\n    }, [])\r\n    return (\r\n        <div className={style.MainContainer}>\r\n            <div className={style.Photo}>\r\n                <img src={avatar}/>\r\n            </div>\r\n            <div className={style.ProfileInfo}>\r\n                <div className={style.InfoItem}>Name: {name}</div>\r\n                <div className={style.InfoItem}>Email: {email} </div>\r\n                <div className={style.InfoItem}>Count of your Packs: {publicCardPacksCount} </div>\r\n                <div><TableForProfile columnsName={[\"Name\", \"Cards\", \"Grade\"]}\r\n                                       buttonsData={[]}\r\n                                       rowContent={PacksData}/></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, {useCallback} from \"react\";\r\nimport style from \"./headerNavbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logoutTC, setIsLoggedInAC} from \"../../../m2-bll/auth-reducer\";\r\n\r\nfunction HeaderNavbar() {\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n        dispatch(setIsLoggedInAC(false))\r\n    }, [])\r\n    return (\r\n        <div className={style.Navbar}>\r\n            <div >\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/profile\" >My Profile</NavLink></div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/Packs\">Packs</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/files\">Upload Files</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/login\" onClick={logoutHandler}>GetOut</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HeaderNavbar;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\n\r\ninterface IFileInputProps {\r\n    fileURL: string;\r\n}\r\n\r\nconst Video: React.FC<IFileInputProps> = ({fileURL}) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    const [duration, setDuration] = useState();\r\n    const [controls, setControls] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDuration(videoRef && videoRef.current && videoRef.current.duration);\r\n            if (videoRef && videoRef.current && videoRef.current.currentTime === videoRef.current.duration) {\r\n                videoRef.current.currentTime = 0;\r\n                videoRef.current.play();\r\n            }\r\n            setCurrentTime(videoRef && videoRef.current && videoRef.current.currentTime);\r\n        }, 300);\r\n    }, []);\r\n\r\n    const makeFullScreen = () => {\r\n        if (videoRef && videoRef.current)\r\n            if (videoRef.current.requestFullscreen) {\r\n                videoRef.current.requestFullscreen();\r\n            } else {\r\n                console.log(\"Fullscreen API is not supported\");\r\n            }\r\n    };\r\n\r\n    // videoRef.current!.height\r\n\r\n    const play = () => videoRef && videoRef.current && videoRef.current.play();\r\n    const pause = () => videoRef && videoRef.current && videoRef.current.pause();\r\n    const volumeUp = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume < 0.9) videoRef.current.volume += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 1);\r\n    };\r\n    const volumeDown = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume > 0.1) videoRef.current.volume -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 0);\r\n    };\r\n    const currentTimeUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime < videoRef.current.duration - 0.3) videoRef.current.currentTime += 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = videoRef.current.duration);\r\n    };\r\n    const currentTimeDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime > 0.3) videoRef.current.currentTime -= 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const playbackRateUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate < 100) videoRef.current.playbackRate += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 100);\r\n    };\r\n    const playbackRateDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate > 0.2) videoRef.current.playbackRate -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 0.2);\r\n    };\r\n    const stop = () => {\r\n        videoRef && videoRef.current && videoRef.current.pause();\r\n        videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const width100 = () => {\r\n        videoRef && videoRef.current && (videoRef.current.width = 100);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexFlow: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            Video\r\n            <label>\r\n                controls\r\n                <input type={'checkbox'} checked={controls} onChange={e => setControls(e.currentTarget.checked)}/>\r\n            </label>\r\n            <video\r\n                src={fileURL}\r\n                width={'300px'}\r\n                controls={controls}\r\n                ref={videoRef}\r\n            />\r\n            <div>\r\n                <button onClick={play}>play</button>\r\n                <button onClick={pause}>pause</button>\r\n                <button onClick={makeFullScreen}>makeFullScreen</button>\r\n                <button onClick={volumeUp}>volumeUp</button>\r\n                <button onClick={volumeDown}>volumeDown</button>\r\n                <button onClick={currentTimeUp}>currentTimeUp</button>\r\n                <button onClick={currentTimeDown}>currentTimeDown</button>\r\n                <button onClick={stop}>stop</button>\r\n                <button onClick={playbackRateUp}>playbackRateUp</button>\r\n                <button onClick={playbackRateDown}>playbackRateDown</button>\r\n                <button onClick={width100}>width100</button>\r\n            </div>\r\n            duration: {duration} currentTime: {currentTime}\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/1P2ov_oidRQ\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport Video from \"./Video\";\r\nimport {getFile, writeFile} from \"./getFile\";\r\n\r\ninterface IFileInputProps {\r\n\r\n}\r\n\r\nconst Files: React.FC<IFileInputProps> = () => {\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(false);\r\n    const [base64, setBase64] = useState(true); // base64 - true, text - false\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [fileData, setFileData] = useState();\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // e.preventDefault();\r\n        const reader = new FileReader();\r\n        const formData = new FormData(); // for send to back\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) { // reader\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n                };\r\n\r\n                if (base64) reader.readAsDataURL(newFile);\r\n                else reader.readAsText(newFile);\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () => {\r\n        const response = axios.post('https://dry-forest-56016.herokuapp.com/file', fileData);\r\n        console.log(response)\r\n    };\r\n\r\n    const returnFileSize = (n: number) => {\r\n        if (n < 1024) {\r\n            return n + 'bytes';\r\n        } else if (n > 1024 && n < 1048576) {\r\n            return (n / 1024).toFixed(2) + 'KB';\r\n        } else if (n > 1048576) {\r\n            return (n / 1048576).toFixed(2) + 'MB';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            FileInput\r\n\r\n            <input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <label>\r\n                reader\r\n                <input type={'checkbox'} checked={code} onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </label>\r\n            <label>\r\n                base64\r\n                <input type={'checkbox'} checked={base64} onChange={e => setBase64(e.currentTarget.checked)}/>\r\n            </label>\r\n\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>lastModified: {file && file.lastModified}</div>\r\n            <div>size: {file && returnFileSize(file.size)}</div>\r\n            <div>type: {file && file.type}</div>\r\n\r\n            <input\r\n                ref={inRef}\r\n                type={'file'}\r\n                style={{display: 'none'}}\r\n                onChange={upload}\r\n            />\r\n            <button onClick={() => inRef && inRef.current && inRef.current.click()}>add</button>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            <pre>{file64}</pre>\r\n            <div>\r\n                <button onClick={() => writeFile('Text.txt', text + `\\r\\n` + file64)}>save</button>\r\n                <button onClick={send}>send</button>\r\n                <button onClick={() => getFile(\"https://dry-forest-56016.herokuapp.com\" + 'file', 'newFile.jpg')}>get</button>\r\n            </div>\r\n\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <Video fileURL={fileURL}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Files;","import axios from 'axios';\r\n\r\nexport const getFile = (url: string, fileName: string) => {\r\n    // запросить файл\r\n    axios.get(url, {responseType: 'blob'}) // !!! responseType: 'blob'\r\n        .then(({data}) => {\r\n            const blob = new Blob([data], {type : 'image/jpeg'});\r\n            console.log(blob)\r\n\r\n            // создать ссылку на файл\r\n            const downloadUrl = window.URL.createObjectURL(blob);\r\n\r\n            // создать тег \"ссылка\" на наш файл\r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n\r\n            // добавить атрибуты нашему тегу: загрузочный, имя файла\r\n            link.setAttribute('download', fileName);\r\n\r\n            // добавить тег в документ\r\n            document.body.appendChild(link);\r\n\r\n            // нажать на ссылку\r\n            link.click();\r\n\r\n            // удалить тег из документа\r\n            link.remove();\r\n        });\r\n};\r\n\r\nexport const writeFile = (fileName: string, value: string) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = \"data:text/plain;content-disposition=attachment;filename=file,\" + value;\r\n    link.download = fileName;\r\n    link.style.display = \"none\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n};","import React from \"react\";\r\nimport style from \"./css.module.css\"\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\ntype StarReadPropsType ={\r\n    value:number\r\n}\r\ntype StarChangePropsType ={\r\n    value:number\r\n    setValue: (value:any) => void\r\n}\r\n\r\nexport const StarRead= (props:StarReadPropsType) => {\r\n    return (<Box component=\"fieldset\" mb={0} borderColor=\"transparent\">\r\n    <Rating name=\"read-only\" value={props.value} size={\"large\"} readOnly />\r\n    </Box>)\r\n}\r\nexport const StarChange= (props:StarChangePropsType) => {\r\n    return (<Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Rating name=\"simple-controlled\"\r\n                value={props.value}\r\n                onChange={(event, newValue) => {\r\n                    props.setValue(newValue)}}/>\r\n    </Box>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {StarChange} from \"../../common/Star/Star\";\r\nimport style from \"./css.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {gradeCardTC} from \"../../../m2-bll/table-reduser\";\r\n\r\ntype CardsControlButtonsPropsType = {\r\n    cardId: any\r\n    closeAnswer: () => void\r\n}\r\n\r\nexport function CardsControlButtons(props: CardsControlButtonsPropsType) {\r\n    const [value, setValue] = useState<1|2|3|4|5>(1)\r\n    const dispatch = useDispatch()\r\n\r\n    const nextCard = () => {\r\n        dispatch(gradeCardTC({grade: value, card_id: props.cardId}))\r\n        setValue(1)\r\n        props.closeAnswer()\r\n    }\r\n    return (\r\n        <div className={style.controlButton}>\r\n            <div className={style.buttonNext}>\r\n                <button onClick={nextCard}>Next Card</button>\r\n            </div>\r\n            Choose how well you answered the question\r\n            <div className={style.starsGo}>\r\n                <StarChange value={value} setValue={setValue}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport style from \"./css.module.css\"\r\nimport {StarRead} from \"../../common/Star/Star\";\r\n\r\ntype CardsSideQPropsType = {\r\n    currentCard: NewCardType | any\r\n    ansVisibility:boolean\r\n    openAnswer: ()=> void\r\n}\r\ntype NewCardType = {\r\n    number: number\r\n    question: string\r\n    answer: string\r\n    grade: number\r\n}\r\nexport const Card= (props: CardsSideQPropsType) => {\r\nreturn (<div className={style.cardPack}>\r\n    <div className={style.cardBorder}>\r\n        <div className={style.stars}><StarRead value={props.currentCard.grade}/></div>\r\n        <div className={style.question}>Question:<br/>{props.currentCard.question} ?</div>\r\n        <div className={style.answer}><button onClick={props.openAnswer}>{props.ansVisibility ? `${props.currentCard.answer}` : \"Open answer\"}</button></div>\r\n    </div>\r\n</div>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    CardType,\r\n    getCardsTC,\r\n} from \"../../../m2-bll/table-reduser\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport style from \"./css.module.css\"\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {CardsControlButtons} from \"./CardsControlButtons\";\r\nimport { Card } from \"./Card\";\r\n\r\n\r\n\r\nfunction Play() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n    const [ansVisibility,setAnsVisibility] = useState(false)\r\n\r\n\r\n    const openAnswer = () => {\r\n        setAnsVisibility(true)\r\n        setTimeout (()=> {  setAnsVisibility(false)},5000)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n    const distributionCardOfGrade = () => {\r\n        const a = Math.round(Math.random() * (100 - 1) + 1)\r\n        if (a >= 1 && a <= 40) {\r\n            return 1\r\n        } else if (a >= 41 && a <= 70) {\r\n            return 2\r\n        } else if (a >= 71 && a <= 85) {\r\n            return 3\r\n        } else if (a >= 86 && a <= 95) {\r\n            return 4\r\n        } else if (a >= 96 && a <= 100) {\r\n            return 5\r\n        }\r\n        else {return 1}\r\n    }\r\n    const currentCardForDraw = (rollGrade:() => 1|2|3|4|5, data: Array<CardType>):CardType => {\r\n        const FilterArray = data.map((card)=> {\r\n            if (card.grade === 0 ) card.grade = 1\r\n            return card\r\n        })\r\n        let cards:Array<any> = []\r\n        while (cards.length < 1)\r\n        {\r\n            let grade  = rollGrade()\r\n            cards = FilterArray.filter((card) => {\r\n                if (Math.round(card.grade) === grade) return card\r\n            })\r\n\r\n        }\r\n            if (cards.length === 1) {return cards[0]}\r\n            const a = Math.round(Math.random() * (cards.length - 2) + 1)\r\n            return cards[a]\r\n    }\r\n    let card = null\r\n    if(CardsData)if(CardsData.length >= 1) card = currentCardForDraw(distributionCardOfGrade,CardsData?CardsData:[])\r\n\r\n\r\n    return <div className={style.Content}>\r\n        {CardsData && card ?\r\n            <>\r\n                <div ><Card currentCard={card} ansVisibility={ansVisibility} openAnswer={openAnswer}/></div>\r\n                <div ><CardsControlButtons cardId={card._id} closeAnswer={()=>setAnsVisibility(false)}/></div>\r\n            </> : <div>Этот пак пуст !</div>}\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Play;","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reducer\";\r\n\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    //const [open, setOpen] = React.useState(true)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null));\r\n    }\r\n\r\n\r\n    const isOpen = !!error ;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {userDate} from \"../../m2-bll/auth-reducer\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {changeUserDataTC} from \"../../m2-bll/profile-reducer\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        height: '15vh',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction SettingsPage() {\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    const loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const {name,avatar} = useSelector<AppRootStateType,userDate>(state => state.auth.UserData);\r\n\r\n    const updateProfile = (name: string, newAvatar: string) => {\r\n        dispatch(changeUserDataTC({name: name, avatar: newAvatar}))\r\n    }\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            if (!values.name) {\r\n                return {\r\n                    email: 'Please enter your new name'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            name: name,\r\n            avatar: avatar,\r\n        },\r\n        onSubmit: values => {\r\n            debugger\r\n            dispatch(changeUserDataTC({name: values.name, avatar: values.avatar}))\r\n        },\r\n    });\r\n    return (loading ? <Preloader/> :\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Change your name\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            autoComplete=\"name\"\r\n                            label=\"Name\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('name')}\r\n                        />\r\n                        {formik.errors.name ? <div>{formik.errors.name}</div> : null}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Change your avatar\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"avatar\"\r\n                            name=\"avatar\"\r\n                            autoComplete=\"avatar\"\r\n                            label=\"Url for your avatar\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('avatar')}\r\n                        />\r\n                        {formik.errors.name ? <div>{formik.errors.avatar}</div> : null}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <ErrorSnackbar/>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50\r\n    const left = 50\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModal({ text,open, setModalOpen, onButtonClick}:{text:string,open:boolean, setModalOpen:(value:boolean)=>void, onButtonClick:(id?:string)=>void}) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data:any)=>{setModalOpen(false); onButtonClick()}\r\n    const cancel = ()=>{setModalOpen(false)}\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n\r\n            </p>\r\n            <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                    YES\r\n                </Button>\r\n                <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                    NO\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={()=>setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50\r\n    const left = 50\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            display:\"flex\",\r\n            flexDirection:\"column\",\r\n            justifyContent: \"space-around\",\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleUpdatePackInput({text, open, setModalOpen, onButtonClick}:\r\n    { text: string, open: boolean, setModalOpen: (value: boolean) => void,\r\n        onButtonClick: (name: string, rating:number, grade:number, deckCover:string) => void }) {\r\n    const classes = useStyles();\r\n    let [deckCover, setDeckCover] = useState<string>(\"My deck Cover\")\r\n\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(name, rating, grade, deckCover)\r\n        setName(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [grade, setGrade] = useState<number>(0)\r\n    let [rating, setRating] = useState<number>(0)\r\n    let [name, setName] = useState<string>(\"\")\r\n    const body = (\r\n        <div  style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n                New name:\r\n            </p>\r\n            <TextField name={\"Name\"} onChange={(event) => setName(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">\r\n                Rating:\r\n            </p>\r\n            <Rating\r\n                name=\"simple-controlled\"\r\n                value={rating}\r\n                onChange={(event, newValue) => {\r\n                    if (newValue)\r\n                        setRating(newValue);\r\n                }}\r\n            />\r\n            <InputLabel id=\"demo-simple-select-label\">Grade</InputLabel>\r\n            <input value={grade} type=\"number\" onChange={event => setGrade(Number(event.currentTarget.value))}/>\r\n            <input type={\"file\"}/>\r\n          <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n              <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                  Confirm\r\n              </Button>\r\n              <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                  Cancel\r\n              </Button>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../common/Modal/modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SimpleUpdatePackInput from \"../../common/Modal/modalInput2\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\nexport const buttonStyle = {margin: \"5px\", width: \"20px\", height: \" 20px\"}\r\n\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?: string, rating?: number, grade?: number, deckCover?: string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n    TableWidth: string\r\n    TableHeight: string\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | any\r\n    buttonsData: Array<ButtonType>\r\n    rowsCount: number\r\n    currentPage:number\r\n    TableWidth: string\r\n    TableHeight: string\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n    rowsCount: number\r\n    currentPage:number\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n\r\n\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n\r\n    return (<div style={{\r\n        display: \"flex\", width: \"fit-content\",\r\n        height: \"fit-content\",alignItems: \"center\",\r\n        justifyContent:\" center\"\r\n    }}>\r\n        {props.buttonsData.map((i) => {\r\n            const onUpdateButtonClick = (name: string, rating: number, grade: number, deckCover: string) => {\r\n                if (i.onClick) {\r\n                    i.onClick(props.id, name, rating, grade, deckCover)\r\n                }\r\n            }\r\n            let onclick = i.onClick\r\n\r\n            function Handler() {\r\n                if (onclick) onclick(props.id)\r\n            }\r\n\r\n            switch (i.name) {\r\n                case \"Delete\":\r\n                    return (deleteOpen ?\r\n                            <SimpleModal text={\"Do you want to delete pack?\"}\r\n                                         open={deleteOpen}\r\n                                         onButtonClick={Handler}\r\n                                         setModalOpen={setDeleteOpen}/>\r\n                            : <Button size={\"small\"}\r\n                                      style={buttonStyle}\r\n                                      variant=\"contained\" color=\"primary\"\r\n                                      onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Update\":\r\n                    return (update ?\r\n                            <SimpleUpdatePackInput text={\"Do you want to update pack?\"} open={update}\r\n                                                   onButtonClick={onUpdateButtonClick}\r\n                                                   setModalOpen={setUpdateOpen}/>\r\n                            : <Button size={\"small\"}\r\n                                      style={buttonStyle}\r\n                                      variant=\"contained\" color=\"primary\"\r\n                                      onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Cards\":\r\n                    return (<Button size={\"small\"}\r\n                                    style={buttonStyle}\r\n                                    variant=\"contained\" color=\"primary\"\r\n                                    onClick={Handler}>{i.name}</Button>)\r\n                case \"Play\":\r\n                    return (<Button size={\"small\"}\r\n                                    style={buttonStyle}\r\n                                    variant=\"contained\" color=\"primary\"\r\n                                    onClick={Handler}>{i.name}</Button>)\r\n            }\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: any) => {\r\n            return <div style={{\r\n                width: `calc(${props.TableWidth}/${props.Content.length})`,\r\n                height: `calc(${props.TableHeight}/25)`\r\n            }}>{e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    // let rowData = []\r\n    let date =\"\"\r\n    // let MaxValue = props.rowsCount\r\n    // if(props.Data){\r\n    //     let countRenderItem = (props.Data.length - (( props.rowsCount*props.currentPage)-props.rowsCount))\r\n    //     if (countRenderItem < props.rowsCount) MaxValue = countRenderItem\r\n    // }\r\n    // let startValue =( MaxValue * props.currentPage ) - MaxValue\r\n    // let endValue = MaxValue * props.currentPage\r\n    // for (let i = startValue; i < endValue; i++) {\r\n    //     if (props.Data) rowData.push(props.Data[i])\r\n    // }\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i:PackType ) => {\r\n                if (i.updated.length > 11 ) date = i.updated.substring(0, 10)\r\n                else date = i.updated\r\n\r\n                return <ColumnsName\r\n                    TableHeight={props.TableHeight} TableWidth={props.TableWidth}\r\n                    Content={[i.name, i.cardsCount, date, i.grade,\r\n                        <Buttons id={i._id} buttonsData={props.buttonsData}/>]} />\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForPacks(props: TablePropsType) {\r\n    let TableStyle  = document.getElementById(\"TablePacks\")\r\n    let TableWidth = \"\"\r\n    let TableHeight = \"\"\r\n    if (TableStyle) {\r\n        TableWidth = window.getComputedStyle(TableStyle).width\r\n        TableHeight = window.getComputedStyle(TableStyle).height\r\n    }\r\n    return (\r\n        <div className={style.Table} id={\"TablePacks\"}>\r\n            { TableStyle ?<><div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName} TableHeight={TableHeight} TableWidth={TableWidth}/>\r\n            </div>\r\n                <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent}\r\n                buttonsData={props.buttonsData}\r\n                rowsCount={props.rowsCount}\r\n                currentPage={props.currentPage}\r\n                TableHeight={TableHeight}\r\n                TableWidth={TableWidth}\r\n                />\r\n                </div> </>: <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForPacks;","import React, {useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\n\r\ntype PaginatorPropsType ={\r\n    maxPages: number\r\n    startValue: number\r\n    endValue:number\r\n    goStart : () => void\r\n    goFinish : () => void\r\n    goPage : (value:number) => void\r\n}\r\nconst Paginator = (props:PaginatorPropsType) => {\r\n    let i =props.startValue\r\n    let buttons: Array<any> = []\r\n    for ( i;i <= props.maxPages;i++ ) {\r\n    buttons[i] = i}\r\n    return (\r\n        <div className={style.Main}>\r\n        <div className={style.Pagination}>\r\n            <button className={style.startButton} onClick={props.goStart}>Start</button>\r\n            {buttons.map((b)=>{\r\n                let goPage = props.goPage\r\n                function Handler(){goPage(b)}\r\n                if (b <= props.endValue) return <button onClick={Handler}>{b}</button>\r\n            })}\r\n            <button className={style.endButton} onClick={props.goFinish}>End</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModalInput({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (name: string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(title)\r\n        setTitle(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [title, setTitle] = useState<string>(\"\")\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">New title:</p>\r\n            <TextField style={{width:\"100%\"}} value={title} name={\"Name\"} onChange={(event) => setTitle(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Confirm\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport InputRange, {Range} from \"react-input-range\";\r\nimport \"react-input-range/lib/css/index.css\"\r\n\r\ntype RangeSliderPropsType ={\r\n    value: Range | number\r\n    setValue: (value:Range| number) => void\r\n}\r\nexport function RangeSlider(props:RangeSliderPropsType) {\r\n\r\n    return (\r\n        <InputRange\r\n            draggableTrack\r\n            maxValue={20}\r\n            minValue={0}\r\n            value={props.value}\r\n            onChange={value => {props.setValue(value)}} />\r\n    );}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {\r\n    addPackTC,\r\n    deletePackTC,\r\n    getPacksTC,\r\n    PackType,\r\n    PaginatorType,\r\n    setCurrentPagerAC, setEndPagePaginatorAC, setStartPagePaginatorAC,\r\n    updatePackTC\r\n} from \"../../../m2-bll/table-reduser\";\r\nimport {ErrorSnackbar} from \"../../common/ErrorSnackbar/ErrorSnackbar\";\r\nimport TableForPacks from \"./TablePacks\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport SimpleModalInput from \"../../common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {userDate} from \"../../../m2-bll/auth-reducer\";\r\nimport {RangeSlider} from \"../a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch\";\r\n\r\n\r\nfunction PackPage() {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.table.isLoading)\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.allPacks);\r\n    const paginatorData = useSelector<AppRootStateType, PaginatorType>(state => state.table.paginator);\r\n    const [valueSearch, setValueSearch] = useState<string>(\"\")\r\n    const {_id} = useSelector<AppRootStateType, userDate>(state => state.auth.UserData);\r\n    const [valueRange, setValueRange] = useState<any>({min: 0, max: 20})\r\n    let maxPages = Math.ceil(paginatorData.packsCount / 25)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC({pageCount: 22, page: 1}))\r\n    }, [])\r\n    const playButton = (id: string) => {\r\n        history.push(`/play/${id}`)\r\n    }\r\n    const addButton = (name: string) => {\r\n        dispatch(addPackTC({cardsPack: {name: name}}, {page: paginatorData.currentPage}))\r\n    }\r\n    const deleteButton = (id: string) => {\r\n        dispatch(deletePackTC(id, {page: paginatorData.currentPage}))\r\n    }\r\n    const updateButton = (id: string, name?: string, rating: number = 0, grade: number = 0, deckCover: string = \"\") => {\r\n        dispatch(updatePackTC({cardsPack: {_id: id, name: name, rating: rating}}, {page: paginatorData.currentPage}))\r\n    }\r\n    const cardsButton = (id: string) => {\r\n        history.push(`/Cards/${id}`)\r\n    }\r\n    const goStart = () => {\r\n        if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: 1, packName: valueSearch}))\r\n        else dispatch(getPacksTC({pageCount: 22, page: 1}))\r\n        dispatch(setCurrentPagerAC(1))\r\n        dispatch(setStartPagePaginatorAC(1))\r\n        dispatch(setEndPagePaginatorAC(maxPages))\r\n    }\r\n    const goFinish = () => {\r\n        if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: maxPages, packName: valueSearch}))\r\n        else dispatch(getPacksTC({pageCount: 22, page: maxPages}))\r\n        dispatch(setCurrentPagerAC(maxPages))\r\n        if (maxPages < 5) return\r\n        dispatch(getPacksTC({pageCount: 22, page: maxPages}))\r\n        dispatch(setStartPagePaginatorAC(maxPages - 4))\r\n        dispatch(setEndPagePaginatorAC(maxPages))\r\n    }\r\n    const searchChangeValue = (e: any) => {\r\n        setValueSearch(e.currentTarget.value)\r\n    }\r\n    const goSearchName = (e: any) => {\r\n        dispatch(getPacksTC({pageCount: 22, page: 1, packName: valueSearch, max: valueRange.max, min: valueRange.min}))\r\n    }\r\n    const goSearchCards = (value: any) => {\r\n        setValueRange(value)\r\n    }\r\n    const goPage = (value: number) => {\r\n        if (value === paginatorData.endPage) {\r\n            if (value === maxPages) {\r\n                dispatch(setCurrentPagerAC(value))\r\n                if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n                dispatch(getPacksTC({pageCount: 22, page: value}))\r\n                return\r\n            }\r\n            dispatch(setStartPagePaginatorAC(value))\r\n            dispatch(setEndPagePaginatorAC(value + 4))\r\n            dispatch(setCurrentPagerAC(value))\r\n            if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n            else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n            return\r\n        } else if (value === paginatorData.startPage) {\r\n            if (value === 1) {\r\n                dispatch(setCurrentPagerAC(value))\r\n                if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n                else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n                return\r\n            }\r\n            dispatch(setStartPagePaginatorAC(value - 4))\r\n            dispatch(setEndPagePaginatorAC(value))\r\n            dispatch(setCurrentPagerAC(value))\r\n            if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n            else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n\r\n            return\r\n        }\r\n        dispatch(setCurrentPagerAC(value))\r\n        if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n        else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n    }\r\n    const getAllPacks = () => {\r\n        dispatch(getPacksTC({pageCount: 22, page: 1}))\r\n        setValueSearch(\"\")\r\n    }\r\n    const getMyPacks = (e: any) => {\r\n        if (e.currentTarget.checked) dispatch(getPacksTC({pageCount: 22, user_id: _id}))\r\n        else dispatch(getPacksTC({pageCount: 22}))\r\n\r\n    }\r\n    let [addOpen, setAddModalOpen] = useState(false)\r\n    return (<div className={style.Main}>\r\n            {!PacksData && isLoading ? <Preloader/> :\r\n                <>\r\n                    <SimpleModalInput text={\"Do you want to create new pack?\"}\r\n                                      open={addOpen}\r\n                                      onButtonClick={addButton}\r\n                                      setModalOpen={setAddModalOpen}/>\r\n                    <div className={style.SearchPanel}>\r\n                        <div className={style.desktopPanel}>\r\n                            <button onClick={getAllPacks} className={style.refresh}></button>\r\n                            <div><input type=\"checkbox\" onChange={getMyPacks}/><br />My Packs</div>\r\n                            <div><input value={valueSearch} onChange={searchChangeValue} placeholder={\"\\n\" +\r\n                            \"Enter a value to search\"}/></div>\r\n                            <div className={style.slider}><RangeSlider value={valueRange} setValue={goSearchCards}/></div>\r\n                            <button onClick={goSearchName}>Search</button>\r\n                        </div>\r\n                        <div className={style.mobilePanel}>\r\n                            <div className={style.firstBlock}>\r\n                                <div><input value={valueSearch} onChange={searchChangeValue} placeholder={\"\\n\" +\r\n                                \"Enter a value to search\"}/></div>\r\n                                <div className={style.slider}><RangeSlider value={valueRange} setValue={goSearchCards}/></div>\r\n                                <button onClick={goSearchName}>Search</button>\r\n                            </div>\r\n                            <div className={style.secondBlock}>\r\n                                <button onClick={getAllPacks} className={style.refresh}/>Refresh\r\n                                <div><input type=\"checkbox\" onChange={getMyPacks}/>My Packs</div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <TableForPacks\r\n                        columnsName={[\"Name\", \"Cards\", \"Last update\", \"Grade\",\r\n                            <Button size={\"small\"}\r\n                                    style={{margin: \"5px\", height: \" 20px\"}}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => setAddModalOpen(true)}>New</Button>]}\r\n                        rowContent={PacksData}\r\n                        buttonsData={[\r\n                            {name: \"Update\", onClick: updateButton},\r\n                            {name: \"Delete\", onClick: deleteButton},\r\n                            {name: \"Cards\", onClick: cardsButton},\r\n                            {name: \"Play\", onClick: playButton},]}\r\n                        rowsCount={22}\r\n                        currentPage={paginatorData.currentPage}\r\n                        />\r\n                    <Paginator maxPages={maxPages}\r\n                               endValue={paginatorData.endPage}\r\n                               startValue={paginatorData.startPage}\r\n                               goFinish={goFinish}\r\n                               goPage={goPage}\r\n                               goStart={goStart}/>\r\n                </>\r\n            }\r\n\r\n            <ErrorSnackbar/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PackPage;","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {CardType} from \"../../../m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../common/Modal/modal\";\r\nimport SimpleModalInput from \"../../common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {buttonStyle} from \"../a1-TableOfPacks/TablePacks\";\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data:any) => any\r\n}\r\n\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    cardId: string\r\n    PackId: string\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n    return (\r\n        <div style={{display:\"flex\"}}>\r\n            {props.buttonsData.map((i) => {\r\n                let onclick = i.onClick\r\n                switch (i.name) {\r\n                    case \"Delete\":\r\n                       const DeleteHandler = () => {if (onclick) onclick({cardId: props.cardId,packId: props.PackId})}\r\n                        return (<>\r\n                                <SimpleModal text={\"Do you want to delete pack?\"}\r\n                                             open={deleteOpen}\r\n                                             onButtonClick={DeleteHandler}\r\n                                             setModalOpen={setDeleteOpen}/>\r\n                                 <Button size={\"small\"}\r\n                                         style={buttonStyle}\r\n                                         variant=\"contained\"\r\n                                         color=\"primary\"\r\n                                         onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                    case \"Update\":\r\n                       const UpdateHandler = (question?:string) => {if (onclick) onclick({card: {_id:props.cardId, question:question},packId:props.PackId})}\r\n                        return (<>\r\n                                <SimpleModalInput text={\"Do you want to update pack?\"}\r\n                                                  open={update}\r\n                                                  onButtonClick={UpdateHandler}\r\n                                                  setModalOpen={setUpdateOpen}/>\r\n                                <Button size={\"small\"}\r\n                                        style={buttonStyle}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                }\r\n            })}\r\n        </div>)\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((i: any) => {\r\n            return <div style={{width:`calc(90vw/${props.Content.length})`}}>{i}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\ntype RowContentPropsType = {\r\n    Data: Array<CardType> | null\r\n    buttonsData: any\r\n}\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.question, i.answer, i.grade, i.updated,i.shots,\r\n                        <Buttons cardId={i._id} PackId={i.cardsPack_id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </>)\r\n}\r\n\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<CardType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\nfunction TableForCards(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TableForCards;\r\n","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function AddNewCardModal({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (question: string, answer:string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(question,answer)\r\n        setQuestion(\"\")\r\n        setAnswer(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [question, setQuestion] = useState<string>(\"\")\r\n    let [answer, setAnswer] = useState<string>(\"\")\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">Question:</p>\r\n            <TextField value={question} name={\"Name\"} onChange={(event) => setQuestion(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">Answer</p>\r\n            <TextField value={answer} name={\"Name\"} onChange={(event) => setAnswer(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Add\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardTC,\r\n    CardType,\r\n    deleteCardTC,\r\n    getCardsTC,\r\n    gradeCardTC,\r\n    updateCardTC\r\n} from \"../../../m2-bll/table-reduser\";\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport TableForCards from \"./TableCards\";\r\nimport {DeleteCardDataType, GradeCardDataType, UpdateCardDataType} from \"../../../m3-dal/tableApi\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport AddNewCardModal from \"../../common/Modal/addNewCardModal\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nfunction CardPage() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n    useEffect(() => {\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n    const addButton = (question: string, answer: string) => {\r\n        dispatch(addCardTC({card: {cardsPack_id: id, question: question, answer: answer}}))\r\n    }\r\n    const playButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const updateButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const deleteButton = (data: DeleteCardDataType) => {\r\n        dispatch(deleteCardTC(data))\r\n    }\r\n    const gradeButton = (data: GradeCardDataType) => {\r\n        dispatch(gradeCardTC(data))\r\n    }\r\n    let [addCardModalOpen, setAddCardModalOpen] = useState<boolean>(false)\r\n    return <div>\r\n        {!CardsData ? <Preloader/> : <div>\r\n            <AddNewCardModal text={\"Do you want to create new card?\"}\r\n                             open={addCardModalOpen}\r\n                             onButtonClick={addButton}\r\n                             setModalOpen={setAddCardModalOpen}/>:\r\n            <TableForCards columnsName={[\"question\", \"answer\", \"Grade\", \"updated\", \"Shots\",\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setAddCardModalOpen(true)}>Add new card</Button>]}\r\n                           rowContent={CardsData}\r\n                           buttonsData={[\r\n                               {name: \"Update\", onClick: updateButton},\r\n                               {name: \"Delete\", onClick: deleteButton},\r\n                               {name: \"Grade\", onClick: gradeButton},\r\n                               {name: \"Play\", onClick: playButton},]}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default CardPage;","import React from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect} from \"react-router-dom\";\r\nimport ProfilePage from \"./f5-profile/ProfilePage\";\r\nimport HeaderNavbar from \"./common/header/HeaderNavbar\";\r\nimport Files from \"./f6-files/File/Files\";\r\nimport Play from \"./f3-play/a1-PlayPage/Play\";\r\nimport SettingsPage from \"./f4-settings/SettingPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\nimport PackPage from \"./f2-table/a1-TableOfPacks/PacksPage\";\r\nimport CardPage from \"./f2-table/a2-TableOfCards/CardsPage\";\r\n\r\nfunction Content() {\r\n    const dispatch = useDispatch()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state=>state.profilePage.isInitialized);\r\n    if (!isLoginIn && isInitialized) return <Redirect to=\"/login\"/>\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Container\">\r\n            <HeaderNavbar/>\r\n                <Switch>\r\n                <Route exact path=\"/settings\" render={() => (<SettingsPage/>)}/>\r\n                <Route exact path={\"/profile\"} render={() => (<ProfilePage/>)}/>\r\n                <Route exact path=\"/Cards/:id\" render={() => (<CardPage/>)}/>\r\n                <Route exact path=\"/Packs\" render={() => (<PackPage/>)}/>\r\n                <Route exact path=\"/files\" render={() => (<Files/>)}/>\r\n                <Route exact path=\"/play/:id\" render={() => (<Play/>)}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\", //\"http://localhost:7542/2.0\" ,\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const registrationApi = {\r\n    setRegister(data:RegistretionDataType) {\r\n        const promise = instance.post('auth/register',data );\r\n        return promise;\r\n    }\r\n}\r\n\r\n\r\nexport type RegistretionDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n","import {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {registrationApi, RegistretionDataType} from \"../m3-dal/register-api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isRegistered: false,\r\n    isLoading:false,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-REGISTATED':\r\n            return {...state, isRegistered: action.value}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\nexport const registrationTC = (data: RegistretionDataType) => (dispatch: ThunkDispatch) => {\r\n    registrationApi.setRegister(data)\r\n        .then(res => {\r\n            dispatch(setIsRegistratedAC(true))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n        dispatch(setIsLoadingAC(false))\r\n        handleServerNetworkError(error, dispatch);\r\n        setTimeout(() => dispatch(setAppErrorAC(null)), 3000);\r\n\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\nexport const setIsRegistratedAC = (value: boolean): setIsRegistratedActionType =>\r\n    ({type: 'SET-IS-REGISTRATED', value} as const)\r\nexport const setIsLoadingAC = (value: boolean): setIsLoadingActionType =>\r\n    ({type: 'SET-IS-LOADING', value} as const)\r\n\r\n\r\n// Types\r\n\r\nexport type InitialStateType = any\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\n\r\ntype ActionsType = setIsRegistratedActionType | setIsLoadingActionType\r\n\r\nexport type setIsRegistratedActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\nexport type setIsLoadingActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\n\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {registrationTC, setIsLoadingAC} from \"../../../m2-bll/registration-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegistrationPage() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isRegistered);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isLoading);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n\r\n    const checkEmail = /\\S+@\\S+\\.\\S+/\r\n    const checkPassword = /(?=.*[0-9])(?=.*[a-z])[0-9a-z]{8,}/\r\n\r\n    const formik = useFormik(\r\n        {validate: (values) => {\r\n            if (!values.email) return {\r\n                email: 'Please enter your email'\r\n            }\r\n            else if (checkEmail.test(values.email) === false) {\r\n                return {\r\n                    email: 'Invalid email address'\r\n                }\r\n            }\r\n            if (!values.password) return {\r\n                    email: 'Please enter your email'\r\n                }\r\n            else if (checkPassword.test(values.password) === false) {\r\n                return {\r\n                    password: 'At least 8 characters.At least one letter and number'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            let data = {\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n            dispatch(setIsLoadingAC(true))\r\n            dispatch(registrationTC(data))\r\n        },\r\n    });\r\n\r\n\r\n    if (isRegistered === true) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (isLoading === true ? <Preloader/>:\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')\r\n                        }\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={\"/login\"} >\r\n                                Already have an account? Sign In\r\n                            </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import axios from \"axios\"\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\", //\"http://localhost:7542/2.0\" ,\r\n    ...settings\r\n})\r\n\r\n// api\r\nexport const passwordRecoveryApi = {\r\n    forgot(data:dataType) {\r\n        const promise = instance.post('/auth/forgot',data );\r\n        return promise;\r\n    },\r\n    setNewPassword(newPasswordData:newPasswordDataType) {\r\n        const promise = instance.post('/auth/set-new-password',newPasswordData);\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport type dataType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\nexport type newPasswordDataType = {\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi} from \"../m3-dal/password-recovery-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: false,\r\n    response: null\r\n}\r\n\r\nexport const passwordResetReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-RESET-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const setLoadingAC = (loading: boolean) => ({type: 'LOADING', loading} as const)\r\nexport const setResponseAC = (response: ResponseType) => ({type: 'SET-PASS-RESET-RESPONSE', response} as const)\r\n\r\nexport const resetPasswordTC = (email: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    let data = {\r\n        email: email,\r\n        from: \"test-front-admin\",\r\n        message: `<div style = \"background-color: lime; padding: 15px\">\r\n            password recovery link:\r\n    <a href='http://localhost:3000/study-cards#/password-generation/$token$'>link</a>\r\n    </div>`\r\n    }\r\n    passwordRecoveryApi.forgot(data).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\n\r\nexport type setLoadingACType = ReturnType<typeof setLoadingAC>\r\nexport type setResponseACType = ReturnType<typeof setResponseAC>\r\nexport type InitialStateType = {\r\n    loading: boolean,\r\n    response: null|ResponseType\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setResponseACType\r\n\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi, newPasswordDataType} from \"../m3-dal/password-recovery-api\";\r\nimport {setLoadingAC, setLoadingACType} from \"./password-reset-reducer\";\r\n\r\n\r\nconst initialState:InitialStateType =\r\n    {\r\n        loading: false,\r\n        response: null\r\n    }\r\nexport const passwordGenerationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-GENERATION-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setPassGenerationResponseAC = (response: { info: string }) => ({\r\n    type: \"SET-PASS-GENERATION-RESPONSE\",\r\n    response\r\n} as const)\r\n\r\n\r\nexport const setNewPasswordTC = (newPasswordData: newPasswordDataType, history:any) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    passwordRecoveryApi.setNewPassword(newPasswordData).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setPassGenerationResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n            history.push('/login/')\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\nexport type setPassGenerationResponseACType = ReturnType<typeof setPassGenerationResponseAC>\r\nexport type InitialStateType =    {\r\n    loading: boolean\r\n    response: { info: string } | null\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setPassGenerationResponseACType","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport {InitialStateType, setNewPasswordTC} from \"../../../m2-bll/password-gereration-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function GenerateNewPasswordPage() {\r\n    let state = useSelector<AppRootStateType, InitialStateType>(state => state.passwordGenerationPage)\r\n\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    const history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your new password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            password:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPasswordTC({password: values.password, resetPasswordToken: id}, history));\r\n        },\r\n    });\r\n\r\n\r\n    return (state.loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    New password\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"New password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Set new password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {resetPasswordTC} from \"../../../m2-bll/password-reset-reducer\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ResetPasswordPage() {\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    let loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email: 'Please enter your new email'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(resetPasswordTC(values.email));\r\n        },\r\n    });\r\n\r\n\r\n    return (loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Email for password recovery\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                   Send\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector, useStore} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"../../../m2-bll/auth-reducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                StudyCards\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType,boolean>(state => state.auth.isLoginIn);\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email:'Please enter your email'\r\n                }\r\n            }\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: 'Keizak@yandex.ru',\r\n            password:'s12s12s12',\r\n            rememberMe: false,\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        },\r\n    });\r\n    if(isLoginIn){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return(<div><Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox color={\"primary\"}/>}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                            checked={formik.values.rememberMe}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <NavLink to={\"/password-reset\"} >\r\n                                    Forgot password?\r\n                                </NavLink>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <NavLink to={\"/registration\"}>\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </NavLink>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={8}>\r\n                    <Copyright />\r\n                </Box>\r\n                <ErrorSnackbar/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\nimport Content from \"./Content\";\r\nimport {} from \"../m2-bll/profile-reducer\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {isInitializedTC} from \"../m2-bll/auth-reducer\";\r\nimport RegistrationPage from \"./f1-auth/a2-registration/RegistrationPage\";\r\nimport GenerateNewPasswordPage from \"./f1-auth/a3-password_recovery/GenerateNewPasswordPage\";\r\nimport ResetPasswordPage from \"./f1-auth/a3-password_recovery/ResetPasswordPage\";\r\nimport LoginPage from \"./f1-auth/a1-login/LoginPage\";\r\n\r\nfunction App() {\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state=>state.auth.isInitialized);\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(isInitializedTC())\r\n    },[])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialized ? <Switch>\r\n                <Route exact path=\"/registration\" render={() => (<RegistrationPage/>)}/>\r\n                <Route exact path=\"/password-reset\" render={() => (<ResetPasswordPage/>)}/>}\r\n                <Route exact path=\"/password-generation/:id\" render={() => (<GenerateNewPasswordPage/>)}/>\r\n                <Route exact path=\"/password-generation\" render={() => (<h1>We send to your mail link for password change. Use it!</h1>)}/>\r\n                <Route exact path={[\"/login\",\"/\"]} render={() => (<LoginPage/>)}/>\r\n                <Route path=\"/\" render={() => (<Content/>)}/>\r\n            </Switch>: <Preloader/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer'\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {passwordResetReducer} from \"./password-reset-reducer\";\r\nimport {passwordGenerationReducer} from \"./password-gereration-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {ProfileReducer} from \"./profile-reducer\";\r\nimport {tableReducer} from \"./table-reduser\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    registrationPage: registrationReducer,\r\n    passwordResetPage: passwordResetReducer,\r\n    passwordGenerationPage: passwordGenerationReducer,\r\n    profilePage: ProfileReducer,\r\n    auth:authReducer,\r\n    table:tableReducer,\r\n\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/m1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/m2-bll/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <HashRouter basename={\"\"}>\r\n          <App />\r\n          </HashRouter>\r\n      </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__qQPZT\",\"HeaderTable\":\"css_HeaderTable__3Jzyu\",\"ContentTable\":\"css_ContentTable__3UWf-\",\"Content\":\"css_Content__3gPkX\",\"rowContent\":\"css_rowContent__21_35\",\"button\":\"css_button__14sp_\",\"SearchPanel\":\"css_SearchPanel__1fG_M\",\"desktopPanel\":\"css_desktopPanel__3AVgp\",\"slider\":\"css_slider__z9nQ_\",\"refresh\":\"css_refresh__3CH0v\",\"mobilePanel\":\"css_mobilePanel__2SYU8\",\"Container\":\"css_Container__1hGGK\",\"firstBlock\":\"css_firstBlock__2faZM\",\"secondBlock\":\"css_secondBlock__3QgiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"css_Content__3g44p\",\"cardPack\":\"css_cardPack__1oePw\",\"cardBorder\":\"css_cardBorder__2imWl\",\"stars\":\"css_stars__1d-8p\",\"question\":\"css_question__37r4S\",\"controlButton\":\"css_controlButton__1yfFw\",\"buttonNext\":\"css_buttonNext__pO8za\",\"answer\":\"css_answer__2cOTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"headerNavbar_Navbar__1X9GK\",\"NavbarItem\":\"headerNavbar_NavbarItem__321E1\",\"Active\":\"headerNavbar_Active__zIe9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"styleProfilaPage_MainContainer__M6nuj\",\"Photo\":\"styleProfilaPage_Photo__3ZnG4\",\"ProfileInfo\":\"styleProfilaPage_ProfileInfo__1BR9e\",\"InfoItem\":\"styleProfilaPage_InfoItem__1X9JP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__10kuf\",\"box\":\"css_box__2jfbN\",\"HeaderTable\":\"css_HeaderTable__1mCz5\",\"ContentTable\":\"css_ContentTable__3PYJb\",\"Content\":\"css_Content__3JDoI\",\"rowContent\":\"css_rowContent__2BylD\",\"button\":\"css_button__2J5Wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"css_Main__2sYxk\",\"Pagination\":\"css_Pagination__2-Edu\",\"startButton\":\"css_startButton__2v3dc\",\"endButton\":\"css_endButton__1VYrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__1Um4j\",\"HeaderTable\":\"css_HeaderTable__3S0Ao\",\"ContentTable\":\"css_ContentTable__3c3t8\",\"rowItem\":\"css_rowItem__jIfoN\",\"Content\":\"css_Content__3m5hO\"};"],"sourceRoot":""}