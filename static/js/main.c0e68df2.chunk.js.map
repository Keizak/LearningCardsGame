{"version":3,"sources":["main/m2-bll/app-reducer.ts","main/m1-ui/common/ErrorSnackbar/ErrorSnackbar.tsx","main/m1-ui/utils/error-utils.ts","main/m3-dal/register-api.ts","main/m2-bll/registration-reducer.ts","main/m1-ui/common/Preloader/Preloader.tsx","features/f1-auth/a2-registration/RegistrationNew.tsx","main/m1-ui/pages/RegistrationPage.tsx","main/m3-dal/password-recovery-api.ts","main/m2-bll/password-reset-reducer.ts","features/f1-auth/a3-password_recovery/ResetPassword-New.tsx","main/m1-ui/pages/PasswordResetPage.tsx","main/m2-bll/password-gereration-reducer.ts","features/f1-auth/a3-password_recovery/GenerateNewPassword-New.tsx","main/m1-ui/pages/PasswordGenerationPage.tsx","main/m3-dal/login-api.ts","main/m2-bll/auth-reducer.ts","features/f1-auth/a1-login/LoginNew.tsx","main/m1-ui/pages/LoginPage.tsx","features/f2-table/a3-TableOfProfile/TableProfile.tsx","main/m3-dal/tableApi.ts","main/m2-bll/table-reduser.ts","main/m1-ui/pages/ProfilePage.tsx","main/m1-ui/header/HeaderNavbar.tsx","main/m1-ui/common/Modal/modal.tsx","main/m1-ui/common/Modal/modalInput.tsx","main/m1-ui/common/Modal/modalInput2.tsx","features/f2-table/a1-TableOfPacks/TablePacks.tsx","features/f2-table/a2-TableOfCards/TableCards.tsx","main/m1-ui/common/Modal/addNewCardModal.tsx","features/f2-table/a2-TableOfCards/CardsPage.tsx","main/m1-ui/pages/CardsPage.tsx","main/m1-ui/common/Paginator/Paginator.tsx","features/f2-table/a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch.tsx","features/f2-table/a1-TableOfPacks/PacksPage.tsx","main/m1-ui/pages/PacksPage.tsx","main/m1-ui/pages/File/Video.tsx","main/m1-ui/pages/File/Files.tsx","main/m1-ui/pages/File/getFile.ts","main/m1-ui/common/Star/Star.tsx","features/f3-play/CardsControlButtons.tsx","features/f3-play/Card.tsx","features/f3-play/Play.tsx","main/m2-bll/profile-reducer.ts","main/m1-ui/pages/SettingPage.tsx","main/m1-ui/Content.tsx","main/m1-ui/App.tsx","serviceWorker.ts","main/m2-bll/store.ts","index.tsx","features/f2-table/a1-TableOfPacks/css.module.css","features/f3-play/css.module.css","main/m1-ui/header/headerNavbar.module.css","main/m1-ui/pages/styleProfilaPage.module.css","features/f2-table/a3-TableOfProfile/css.module.css","features/f2-table/a2-TableOfCards/css.module.css","main/m1-ui/common/Paginator/css.module.css"],"names":["initialState","setAppErrorAC","error","type","Alert","props","elevation","variant","ErrorSnackbar","useSelector","state","app","dispatch","useDispatch","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","handleServerNetworkError","response","data","message","status","instance","axios","create","baseURL","withCredentials","registrationApi","post","isRegistered","isLoading","setIsRegistratedAC","value","setIsLoadingAC","Preloader","className","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","RegistrationNew","classes","registrationPage","checkEmail","checkPassword","formik","useFormik","validate","values","email","test","password","initialValues","onSubmit","then","res","catch","setTimeout","registrationTC","to","Container","component","maxWidth","CssBaseline","Avatar","handleSubmit","TextField","required","fullWidth","id","name","autoComplete","autoFocus","label","getFieldProps","errors","Button","Grid","container","item","xs","Box","mt","RegistrationPage","passwordRecoveryApi","newPasswordData","loading","setLoadingAC","ResetPasswordNew","passwordResetPage","from","alert","info","PasswordResetPage","GenerateNewPasswordNew","passwordGenerationPage","useParams","history","useHistory","push","setNewPasswordTC","resetPasswordToken","PasswordGenerationPage","authAPI","login","logout","delete","authMe","profileUpdatePhoto","put","isInitialized","isLoginIn","UserData","created","isAdmin","publicCardPacksCount","rememberMe","token","tokenDeathTime","updated","verified","__v","_id","setIsLoggedInAC","setUsersDataAC","Userdata","setInitializedAC","LoginNew","auth","FormControlLabel","control","Checkbox","checked","LoginPage","ColumnsName","TableStyle","document","getElementById","TableWidth","TableHeight","window","getComputedStyle","height","style","Content","map","e","length","substring","RowContent","rowContent","Data","i","cardsCount","grade","TableForProfile","Table","HeaderTable","columnsName","ContentTable","buttonsData","TableApi","get","packName","min","max","sortPacks","page","pageCount","user_id","cardsPack_id","allPacks","myPacks","cards","paginator","currentPage","packsCount","startPage","endPage","getPacksTC","setAllPacksAC","cardPacks","setPacksTotalCountAC","cardPacksTotalCount","updatePackTC","getData","getCardsTC","setCardsAC","updateCardTC","packId","gradeCardTC","updatedGrade","packs","count","setStartPagePaginatorAC","setEndPagePaginatorAC","setCurrentPagerAC","ProfilePage","PacksData","table","useEffect","MainContainer","Photo","src","ProfileInfo","InfoItem","HeaderNavbar","logoutHandler","useCallback","Navbar","NavbarItem","activeClassName","Active","onClick","getModalStyle","top","left","transform","createStyles","position","background","border","boxShadow","shadows","padding","SimpleModal","text","setModalOpen","onButtonClick","React","useState","modalStyle","body","justifyContent","size","Modal","aria-labelledby","aria-describedby","SimpleModalInput","title","setTitle","onChange","currentTarget","SimpleUpdatePackInput","deckCover","setGrade","rating","setRating","setName","Rating","newValue","InputLabel","Number","buttonStyle","Buttons","deleteOpen","setDeleteOpen","update","setUpdateOpen","onclick","Handler","setCalculations","date","TableForPacks","calculations","rowsCount","cardId","PackId","question","card","answer","shots","TableForCards","rand","Math","round","random","AddNewCardModal","setQuestion","setAnswer","CardPage","CardsData","addCardModalOpen","setAddCardModalOpen","deleteCardTC","CardsPage","Paginator","startValue","buttons","maxPages","Main","Pagination","startButton","goStart","b","goPage","endValue","endButton","goFinish","RangeSlider","draggableTrack","maxValue","minValue","setValue","PackPage","paginatorData","valueSearch","setValueSearch","valueRange","setValueRange","ceil","searchChangeValue","goSearchName","goSearchCards","getAllPacks","getMyPacks","addOpen","setAddModalOpen","cardsPack","SearchPanel","desktopPanel","refresh","placeholder","slider","mobilePanel","firstBlock","secondBlock","PacksPage","Video","fileURL","videoRef","useRef","duration","setDuration","controls","setControls","currentTime","setCurrentTime","setInterval","current","play","flexFlow","ref","pause","requestFullscreen","console","log","volume","playbackRate","frameBorder","allow","allowFullScreen","Files","n","inRef","code","setCode","base64","setBase64","setText","file","setFile","setFileURL","file64","setFile64","fileData","setFileData","accept","multiple","alt","lastModified","toFixed","reader","FileReader","formData","FormData","newFile","target","files","URL","createObjectURL","append","onloadend","result","readAsDataURL","readAsText","click","fileName","link","createElement","download","appendChild","removeChild","writeFile","url","responseType","blob","Blob","downloadUrl","setAttribute","remove","StarRead","mb","borderColor","readOnly","StarChange","CardsControlButtons","controlButton","buttonNext","card_id","closeAnswer","starsGo","Card","cardPack","cardBorder","stars","currentCard","openAnswer","ansVisibility","Play","setAnsVisibility","rollGrade","FilterArray","filter","a","currentCardForDraw","changeUserDataTC","updatedUser","SettingsPage","profilePage","exact","path","render","App","Boolean","location","hostname","match","rootReducer","combineReducers","action","CopyState","searchValue","RegExp","matchValue","filterPacks","pack","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c0e68df2.chunk.js","sourcesContent":["const initialState: InitialStateType = {\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case'APP/SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const)\r\nexport const setAppStatusAC = (status:  RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const)\r\nexport const setAppInitializedAC = (isInitialized:  boolean) => ({ type: 'APP/SET-INITIALIZED', isInitialized } as const)\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppInitializedActionType = ReturnType<typeof setAppInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | SetAppInitializedActionType\r\n\r\n\r\nexport type InitialStateType = any\r\n\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reducer\";\r\n\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    //const [open, setOpen] = React.useState(true)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null));\r\n    }\r\n\r\n\r\n    const isOpen = !!error ;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import {Dispatch} from 'redux'\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType, setAppStatusAC} from '../../m2-bll/app-reducer'\r\n\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL:\"http://localhost:7542/2.0\", //\"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const registrationApi = {\r\n    setRegister(data:RegistretionDataType) {\r\n        const promise = instance.post('auth/register',data );\r\n        return promise;\r\n    }\r\n}\r\n\r\n\r\nexport type RegistretionDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n","import {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {registrationApi, RegistretionDataType} from \"../m3-dal/register-api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isRegistered: false,\r\n    isLoading:false,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-REGISTATED':\r\n            return {...state, isRegistered: action.value}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\nexport const registrationTC = (data: RegistretionDataType) => (dispatch: ThunkDispatch) => {\r\n    registrationApi.setRegister(data)\r\n        .then(res => {\r\n            dispatch(setIsRegistratedAC(true))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n        dispatch(setIsLoadingAC(false))\r\n        handleServerNetworkError(error, dispatch);\r\n        setTimeout(() => dispatch(setAppErrorAC(null)), 3000);\r\n\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\nexport const setIsRegistratedAC = (value: boolean): setIsRegistratedActionType =>\r\n    ({type: 'SET-IS-REGISTRATED', value} as const)\r\nexport const setIsLoadingAC = (value: boolean): setIsLoadingActionType =>\r\n    ({type: 'SET-IS-LOADING', value} as const)\r\n\r\n\r\n// Types\r\n\r\nexport type InitialStateType = any\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\n\r\ntype ActionsType = setIsRegistratedActionType | setIsLoadingActionType\r\n\r\nexport type setIsRegistratedActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\nexport type setIsLoadingActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./preloader.scss\"\r\nexport function Preloader() {\r\nreturn <div className='cssload-loader'>\r\n    <div className='cssload-inner cssload-one'></div>\r\n    <div className='cssload-inner cssload-two'></div>\r\n    <div className='cssload-inner cssload-three'></div>\r\n</div>\r\n\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {registrationTC, setIsLoadingAC} from \"../../../main/m2-bll/registration-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegistrationNew() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isRegistered);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isLoading);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n\r\n    const checkEmail = /\\S+@\\S+\\.\\S+/\r\n    const checkPassword = /(?=.*[0-9])(?=.*[a-z])[0-9a-z]{8,}/\r\n\r\n    const formik = useFormik(\r\n        {validate: (values) => {\r\n            if (!values.email) return {\r\n                email: 'Please enter your email'\r\n            }\r\n            else if (checkEmail.test(values.email) === false) {\r\n                return {\r\n                    email: 'Invalid email address'\r\n                }\r\n            }\r\n            if (!values.password) return {\r\n                    email: 'Please enter your email'\r\n                }\r\n            else if (checkPassword.test(values.password) === false) {\r\n                return {\r\n                    password: 'At least 8 characters.At least one letter and number'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            let data = {\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n            dispatch(setIsLoadingAC(true))\r\n            dispatch(registrationTC(data))\r\n        },\r\n    });\r\n\r\n\r\n    if (isRegistered === true) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (isLoading === true ? <Preloader/>:\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')\r\n                        }\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={\"/login\"} >\r\n                                Already have an account? Sign In\r\n                            </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport RegisterPage from \"../../../features/f1-auth/a2-registration/RegistrationPage\";\r\nimport RegistrationNew from \"../../../features/f1-auth/a2-registration/RegistrationNew\";\r\n\r\n\r\nfunction RegistrationPage() {\r\n    return (\r\n        <RegistrationNew/>\r\n    );\r\n}\r\n\r\nexport default RegistrationPage;","import axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"http://localhost:7542/2.0\", //\"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\n// api\r\nexport const passwordRecoveryApi = {\r\n    forgot(data:dataType) {\r\n        const promise = instance.post('/auth/forgot',data );\r\n        return promise;\r\n    },\r\n    setNewPassword(newPasswordData:newPasswordDataType) {\r\n        const promise = instance.post('/auth/set-new-password',newPasswordData);\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport type dataType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\nexport type newPasswordDataType = {\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi} from \"../m3-dal/password-recovery-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: false,\r\n    response: null\r\n}\r\n\r\nexport const passwordResetReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-RESET-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const setLoadingAC = (loading: boolean) => ({type: 'LOADING', loading} as const)\r\nexport const setResponseAC = (response: ResponseType) => ({type: 'SET-PASS-RESET-RESPONSE', response} as const)\r\n\r\nexport const resetPasswordTC = (email: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    let data = {\r\n        email: email,\r\n        from: \"test-front-admin\",\r\n        message: `<div style = \"background-color: lime; padding: 15px\">\r\n            password recovery link:\r\n    <a href='http://localhost:3000/study-cards#/password-generation/$token$'>link</a>\r\n    </div>`\r\n    }\r\n    passwordRecoveryApi.forgot(data).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\n\r\nexport type setLoadingACType = ReturnType<typeof setLoadingAC>\r\nexport type setResponseACType = ReturnType<typeof setResponseAC>\r\nexport type InitialStateType = {\r\n    loading: boolean,\r\n    response: null|ResponseType\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setResponseACType\r\n\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {resetPasswordTC} from \"../../../main/m2-bll/password-reset-reducer\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ResetPasswordNew() {\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    let loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email: 'Please enter your new email'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(resetPasswordTC(values.email));\r\n        },\r\n    });\r\n\r\n\r\n    return (loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Email for password recovery\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                   Send\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport ResetPassword from \"../../../features/f1-auth/a3-password_recovery/ResetPassword\";\r\nimport ResetPasswordNew from \"../../../features/f1-auth/a3-password_recovery/ResetPassword-New\";\r\n\r\n\r\nfunction PasswordResetPage() {\r\n    return <ResetPasswordNew/>\r\n}\r\n\r\nexport default PasswordResetPage;","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi, newPasswordDataType} from \"../m3-dal/password-recovery-api\";\r\nimport {setLoadingAC, setLoadingACType} from \"./password-reset-reducer\";\r\n\r\n\r\nconst initialState:InitialStateType =\r\n    {\r\n        loading: false,\r\n        response: null\r\n    }\r\nexport const passwordGenerationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-GENERATION-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setPassGenerationResponseAC = (response: { info: string }) => ({\r\n    type: \"SET-PASS-GENERATION-RESPONSE\",\r\n    response\r\n} as const)\r\n\r\n\r\nexport const setNewPasswordTC = (newPasswordData: newPasswordDataType, history:any) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    passwordRecoveryApi.setNewPassword(newPasswordData).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setPassGenerationResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n            history.push('/login/')\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\nexport type setPassGenerationResponseACType = ReturnType<typeof setPassGenerationResponseAC>\r\nexport type InitialStateType =    {\r\n    loading: boolean\r\n    response: { info: string } | null\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setPassGenerationResponseACType","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport {InitialStateType, setNewPasswordTC} from \"../../../main/m2-bll/password-gereration-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function GenerateNewPasswordNew() {\r\n    let state = useSelector<AppRootStateType, InitialStateType>(state => state.passwordGenerationPage)\r\n\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    const history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your new password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            password:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPasswordTC({password: values.password, resetPasswordToken: id}, history));\r\n        },\r\n    });\r\n\r\n\r\n    return (state.loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    New password\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"New password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Set new password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport GenerateNewPassword from \"../../../features/f1-auth/a3-password_recovery/GenerateNewPassword\";\r\nimport GenerateNewPasswordNew from \"../../../features/f1-auth/a3-password_recovery/GenerateNewPassword-New\";\r\n\r\nfunction PasswordGenerationPage() {\r\n    return <GenerateNewPasswordNew/>\r\n}\r\n\r\nexport default PasswordGenerationPage;","import axios from 'axios'\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL:\"http://localhost:7542/2.0\", //\"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        const promise = instance.post('auth/login', data);\r\n        return promise;\r\n    },\r\n    logout() {\r\n        const promise = instance.delete('auth/me');\r\n        return promise;\r\n    },\r\n    authMe() {\r\n        const promise = instance.post('auth/me',{},{});\r\n        return promise\r\n    },\r\n    profileUpdatePhoto(data:profileUpdatePhoto) {\r\n        return instance.put('auth/me', {name:data.name,avatar:data.avatar});\r\n    }\r\n}\r\n\r\n// types\r\nexport type LoginParamsType = {\r\n    password: string\r\n    rememberMe: boolean\r\n    email: string;\r\n}\r\nexport type profileUpdatePhoto = {\r\n    name:string\r\n    avatar:string|File\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, LoginParamsType} from \"../m3-dal/login-api\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nexport type userDate = {\r\n    avatar: string ,\r\n    created:  string | null,\r\n    email:  string | null,\r\n    isAdmin: boolean | null\r\n    name:  string ,\r\n    publicCardPacksCount: string | null,\r\n    rememberMe: boolean | null\r\n    token:  string | null,\r\n    tokenDeathTime:  string | null,\r\n    updated:  string | null,\r\n    verified: boolean | null\r\n    __v:  string | null,\r\n    _id:  string ,\r\n\r\n}\r\n\r\ntype InitialStateType = {\r\n    isInitialized:boolean,\r\n    isLoginIn: boolean,\r\n    UserData: userDate\r\n}\r\nconst initialState: InitialStateType = {\r\n    isInitialized: false,\r\n    isLoginIn: false,\r\n    UserData: {\r\n        avatar: \"\",\r\n        created: null,\r\n        email: null,\r\n        isAdmin: false,\r\n        name: \"\",\r\n        publicCardPacksCount:null,\r\n        rememberMe: false,\r\n        token: null,\r\n        tokenDeathTime: null,\r\n        updated: null,\r\n        verified: false,\r\n        __v: null,\r\n        _id: \"\",\r\n    }\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-LOGIN-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-IS-LOGOUT-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-USER-DATA-IN':\r\n            return {...state, UserData: action.Userdata}\r\n        case'SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGIN-IN', value} as const)\r\nexport const setUsersDataAC = (Userdata: userDate) =>\r\n    ({type: 'SET-USER-DATA-IN', Userdata} as const)\r\nexport const setIsLogoutInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGOUT-IN', value} as const)\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: 'SET-INITIALIZED', isInitialized} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: ThunkDispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\nexport const authMeTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.authMe()\r\n        .then(res => {\r\n                    dispatch(setUsersDataAC(res.data))\r\n                    dispatch(setIsLoggedInAC(true))\r\n            }).catch((e) => {\r\n        dispatch(setIsLoggedInAC(false))\r\n    })\r\n}\r\nexport const isInitializedTC = () => (dispatch: any) => {\r\n    authAPI.authMe()\r\n    .then(res => {\r\n        dispatch(setUsersDataAC(res.data))\r\n        dispatch(setIsLoggedInAC(true))\r\n        dispatch(setInitializedAC(true))\r\n    }).catch((e) => {\r\n        dispatch(setIsLoggedInAC(false))\r\n        dispatch(setInitializedAC(true))\r\n    })\r\n    dispatch(setInitializedAC(true))\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\n    | ReturnType<typeof setIsLogoutInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n\r\n\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>","import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector, useStore} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {isInitializedTC, loginTC} from \"../../../main/m2-bll/auth-reducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginNew() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType,boolean>(state => state.auth.isLoginIn);\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email:'Please enter your email'\r\n                }\r\n            }\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: 'Keizak@yandex.ru',\r\n            password:'s12s12s12',\r\n            rememberMe: false,\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        },\r\n    });\r\n    if(isLoginIn){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return(<div><Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox color={\"primary\"}/>}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                            checked={formik.values.rememberMe}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <NavLink to={\"/password-reset\"} >\r\n                                    Forgot password?\r\n                                </NavLink>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <NavLink to={\"/registration\"}>\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </NavLink>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={8}>\r\n                    <Copyright />\r\n                </Box>\r\n                <ErrorSnackbar/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Login from \"../../../features/f1-auth/a1-login/Login\";\r\nimport LoginNew from \"../../../features/f1-auth/a1-login/LoginNew\";\r\n\r\n\r\nfunction LoginPage() {\r\n\r\n    return <LoginNew/>\r\n}\r\n\r\nexport default LoginPage;","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../main/m2-bll/table-reduser\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nexport  const buttonStyle = {margin:\"5px\", width: \"20px\",height:\" 20px\"}\r\n\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?:string, rating?:number, grade?:number, deckCover?:string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    let TableStyle  = document.getElementById(\"Table\")\r\n    let TableWidth = \"\"\r\n    let TableHeight = \"\"\r\n    if (TableStyle) {\r\n        TableWidth = window.getComputedStyle(TableStyle).width\r\n        TableHeight = window.getComputedStyle(TableStyle).height\r\n    }\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: string ) => {\r\n            return <div style={{\r\n                width: `calc(${TableWidth}/${props.Content.length})`,\r\n                height: `calc(${TableHeight}/10)`\r\n            }}>{ e.length > 11 ? e.substring(0,10) : e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.name, i.cardsCount, i.grade]}/>\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForProfile(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table} id={\"Table\"}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName} />\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForProfile;","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL:\"http://localhost:7542/2.0\", //\"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const TableApi = {\r\n    getPacks(data: GetPacksDataType) {\r\n        const promise = instance.get(`cards/pack?\\\r\n&packName=${data.packName ? data.packName : \"\"}\\\r\n&min=${data.min ? data.min : \"\"}\\\r\n&max=${data.max ? data.max : \"\"}\\\r\n&sortPacks=${data.sortPacks ? data.sortPacks : \"\"}\\\r\n&page=${data.page ? data.page : \"\"}\\\r\n&pageCount=${data.pageCount ? data.pageCount : \"25\"}\\\r\n&user_id=${data.user_id ? data.user_id : \"\"}`);\r\n        return promise;\r\n    },\r\n    addPack(data: AddPackDataType) {\r\n        const promise = instance.post('cards/pack', data);\r\n        return promise;\r\n    },\r\n    deletePack(data: string) {\r\n        const promise = instance.delete(`cards/pack?id=${data}`);\r\n        return promise;\r\n    },\r\n    updatePack(data: UpdatePackDataType) {\r\n        const promise = instance.put('cards/pack', data);\r\n        return promise;\r\n    },\r\n    getCards(data: GetCardsDataType) {\r\n        const promise = instance.get(`cards/card?&cardsPack_id=${data.cardsPack_id}&pageCount=100`);\r\n        return promise;\r\n    },\r\n    addCard(data: AddCardDataType) {\r\n        const promise = instance.post('cards/card', data);\r\n        return promise;\r\n    },\r\n    deleteСard(data: string) {\r\n        const promise = instance.delete(`cards/card?id=${data}`);\r\n        return promise;\r\n    },\r\n    updateСard(data: UpdateCardDataType) {\r\n        const promise = instance.put(`cards/card`, data);\r\n        return promise;\r\n    },\r\n    gradeСard(data: GradeCardDataType) {\r\n        const promise = instance.put(`cards/grade`, data);\r\n        return promise;\r\n    },\r\n}\r\nexport type GetPacksDataType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\nexport type AddPackDataType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: false\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdatePackDataType = {\r\n    cardsPack: {\r\n        _id: string\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: false\r\n        type?: string\r\n    }\r\n}\r\nexport type GetCardsDataType = {\r\n    cardsPack_id: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateCardDataType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        comments?: string\r\n    }\r\n    packId: string\r\n\r\n}\r\nexport type DeleteCardDataType = {\r\n    cardId: string\r\n    packId: string\r\n}\r\n\r\nexport type GradeCardDataType = {\r\n    grade: number\r\n    card_id: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    AddCardDataType,\r\n    AddPackDataType, DeleteCardDataType,\r\n    GetCardsDataType, GetPacksDataType, GradeCardDataType,\r\n    TableApi,\r\n    UpdateCardDataType,\r\n    UpdatePackDataType\r\n} from \"../m3-dal/tableApi\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\nexport type PaginatorType = {\r\n    packsCount: number\r\n    startPage: number\r\n    endPage: number\r\n    currentPage: number\r\n}\r\ntype StateType = {\r\n    cards: any\r\n    allPacks: any\r\n    myPacks: any\r\n    isLoading: boolean\r\n    paginator: PaginatorType\r\n}\r\n\r\nconst initialState: StateType = {\r\n    allPacks: null,\r\n    myPacks: null,\r\n    cards: null,\r\n    isLoading: false,\r\n    paginator: {\r\n        currentPage: 1,\r\n        packsCount: 1,\r\n        startPage: 1,\r\n        endPage: 5,\r\n    }\r\n\r\n}\r\n\r\nexport const tableReducer = (state = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case 'SET-ALL-PACKS':\r\n            return {...state, allPacks: action.packs}\r\n        case 'SET-MY-PACKS':\r\n            return {...state, myPacks: action.packs}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'SET-COUNT': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.packsCount = action.count\r\n            return {...state, paginator: {...state.paginator, packsCount: action.count}}\r\n        }\r\n        case 'SET-START-VALUE-PR': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.startPage = action.value\r\n            return CopyState\r\n        }\r\n        case 'SET-END-VALUE-PR': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.endPage = action.value\r\n            return CopyState\r\n        }\r\n        case 'SET-CURRENT-PAGE': {\r\n            return {...state, paginator: {...state.paginator, currentPage: action.value}}\r\n        }\r\n        case 'FILTER-FOR SEARCH': {\r\n            debugger\r\n            let searchValue = new RegExp(action.matchValue, 'i');\r\n            let filterPacks = action.data.filter((pack) => pack.name.match(searchValue))\r\n            return {...state, allPacks: filterPacks, paginator: {...state.paginator, packsCount: filterPacks.length}}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\n\r\ntype ThunkDispatch = Dispatch<ActionType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\nexport const getPacksTC = (data:GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getPacks(data).then(res => {\r\n        dispatch(setAllPacksAC(res.data.cardPacks))\r\n        dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        dispatch(setIsLoadingAC(false))\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const addPackTC = (data: AddPackDataType, getData: GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addPack(data).then(res => {\r\n        TableApi.getPacks(getData).then(res => {\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deletePackTC = (data: string, getData: GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.deletePack(data).then(res => {\r\n        TableApi.getPacks(getData).then(res => {\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const updatePackTC = (data: UpdatePackDataType, getData: GetPacksDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updatePack(data).then(res => {\r\n        debugger\r\n        TableApi.getPacks(getData).then(res => {\r\n            debugger\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\n\r\n\r\nexport const getCardsTC = (data: GetCardsDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getCards(data)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deleteCardTC = (data: DeleteCardDataType) => (dispatch: ThunkDispatch) => {\r\n    debugger\r\n    setIsLoadingAC(true)\r\n    TableApi.deleteСard(data.cardId).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const updateCardTC = (data: UpdateCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updateСard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const addCardTC = (data: AddCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addCard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.card.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\nexport const gradeCardTC = (data: GradeCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.gradeСard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: res.data.updatedGrade.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\n\r\nexport const setAllPacksAC = (packs: PackType) => ({type: 'SET-ALL-PACKS', packs} as const)\r\nexport const setMyPacksAC = (packs: PackType) => ({type: 'SET-MY-PACKS', packs} as const)\r\nexport const setIsLoadingAC = (value: boolean) => ({type: 'SET-IS-LOADING', value} as const)\r\nexport const setCardsAC = (cards: CardsType) => ({type: 'SET-CARDS', cards} as const)\r\nexport const setPacksTotalCountAC = (count: number) => ({type: 'SET-COUNT', count} as const)\r\nexport const setStartPagePaginatorAC = (value: number) => ({type: 'SET-START-VALUE-PR', value} as const)\r\nexport const setEndPagePaginatorAC = (value: number) => ({type: 'SET-END-VALUE-PR', value} as const)\r\nexport const setCurrentPagerAC = (value: number) => ({type: 'SET-CURRENT-PAGE', value} as const)\r\nexport const filterForSearchAC = (data: Array<any>,matchValue:string) => ({type: 'FILTER-FOR SEARCH', data,matchValue} as const)\r\n\r\ntype filterForSearchActionType = ReturnType<typeof filterForSearchAC>\r\ntype setCardsActionType = ReturnType<typeof setCardsAC>\r\ntype setAllPacksActionType = ReturnType<typeof setAllPacksAC>\r\ntype setMyPacksActionType = ReturnType<typeof setMyPacksAC>\r\ntype setLoadingActionType = ReturnType<typeof setIsLoadingAC>\r\ntype setPacksTotalCountActionType = ReturnType<typeof setPacksTotalCountAC>\r\nexport type setStartPagePaginatorActionType = ReturnType<typeof setStartPagePaginatorAC>\r\ntype setEndPagePaginatorActionType = ReturnType<typeof setEndPagePaginatorAC>\r\ntype setCurrentPagerActionType = ReturnType<typeof setCurrentPagerAC>\r\n\r\ntype ActionType = setLoadingActionType | setAllPacksActionType | setCardsActionType | setPacksTotalCountActionType |\r\n    setStartPagePaginatorActionType | setEndPagePaginatorActionType | setCurrentPagerActionType | setMyPacksActionType |\r\n    filterForSearchActionType\r\n\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n    deckCover: any\r\n}\r\nexport type CardsType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n    number?: number\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {userDate} from \"../../m2-bll/auth-reducer\";\r\nimport style from \"./styleProfilaPage.module.css\"\r\nimport TableForProfile from \"../../../features/f2-table/a3-TableOfProfile/TableProfile\";\r\nimport {getPacksTC, PackType} from \"../../m2-bll/table-reduser\";\r\n\r\nfunction ProfilePage() {\r\n    const {name, email, avatar, publicCardPacksCount, _id} = useSelector<AppRootStateType, userDate>((state) => state.auth.UserData)\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.allPacks);\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    useEffect(() => {\r\n        dispatch(getPacksTC({user_id: _id}))\r\n    }, [])\r\n    return (\r\n        <div className={style.MainContainer}>\r\n            <div className={style.Photo}>\r\n                <img src={avatar}/>\r\n            </div>\r\n            <div className={style.ProfileInfo}>\r\n                <div className={style.InfoItem}>Name: {name}</div>\r\n                <div className={style.InfoItem}>Email: {email} </div>\r\n                <div className={style.InfoItem}>Count of your Packs: {publicCardPacksCount} </div>\r\n                <div><TableForProfile columnsName={[\"Name\", \"Cards\", \"Grade\"]}\r\n                                                                     buttonsData={[]}\r\n                                                                     rowContent={PacksData}/></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, {useCallback} from \"react\";\r\nimport style from \"./headerNavbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logoutTC, setIsLoggedInAC} from \"../../m2-bll/auth-reducer\";\r\n\r\nfunction HeaderNavbar() {\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n        dispatch(setIsLoggedInAC(false))\r\n    }, [])\r\n    return (\r\n        <div className={style.Navbar}>\r\n            <div >\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/profile\" >My Profile</NavLink></div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/Packs\">Packs</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/files\">Upload Files</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={style.NavbarItem} activeClassName={style.Active} to=\"/login\" onClick={logoutHandler}>GetOut</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HeaderNavbar;\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50\r\n    const left = 50\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModal({ text,open, setModalOpen, onButtonClick}:{text:string,open:boolean, setModalOpen:(value:boolean)=>void, onButtonClick:(id?:string)=>void}) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data:any)=>{setModalOpen(false); onButtonClick()}\r\n    const cancel = ()=>{setModalOpen(false)}\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n\r\n            </p>\r\n            <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                    YES\r\n                </Button>\r\n                <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                    NO\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={()=>setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModalInput({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (name: string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(title)\r\n        setTitle(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [title, setTitle] = useState<string>(\"\")\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">New title:</p>\r\n            <TextField style={{width:\"100%\"}} value={title} name={\"Name\"} onChange={(event) => setTitle(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Confirm\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50\r\n    const left = 50\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            display:\"flex\",\r\n            flexDirection:\"column\",\r\n            justifyContent: \"space-around\",\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleUpdatePackInput({text, open, setModalOpen, onButtonClick}:\r\n    { text: string, open: boolean, setModalOpen: (value: boolean) => void,\r\n        onButtonClick: (name: string, rating:number, grade:number, deckCover:string) => void }) {\r\n    const classes = useStyles();\r\n    let [deckCover, setDeckCover] = useState<string>(\"My deck Cover\")\r\n\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(name, rating, grade, deckCover)\r\n        setName(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [grade, setGrade] = useState<number>(0)\r\n    let [rating, setRating] = useState<number>(0)\r\n    let [name, setName] = useState<string>(\"\")\r\n    const body = (\r\n        <div  style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n                New name:\r\n            </p>\r\n            <TextField name={\"Name\"} onChange={(event) => setName(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">\r\n                Rating:\r\n            </p>\r\n            <Rating\r\n                name=\"simple-controlled\"\r\n                value={rating}\r\n                onChange={(event, newValue) => {\r\n                    if (newValue)\r\n                        setRating(newValue);\r\n                }}\r\n            />\r\n            <InputLabel id=\"demo-simple-select-label\">Grade</InputLabel>\r\n            <input value={grade} type=\"number\" onChange={event => setGrade(Number(event.currentTarget.value))}/>\r\n            <input type={\"file\"}/>\r\n          <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n              <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                  Confirm\r\n              </Button>\r\n              <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                  Cancel\r\n              </Button>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SimpleUpdatePackInput from \"../../../main/m1-ui/common/Modal/modalInput2\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nexport const buttonStyle = {margin: \"5px\", width: \"20px\", height: \" 20px\"}\r\n\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?: string, rating?: number, grade?: number, deckCover?: string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n    setCalculations?:(value:boolean)=> void\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | any\r\n    buttonsData: Array<ButtonType>\r\n    rowsCount: number\r\n    currentPage:number\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n    rowsCount: number\r\n    currentPage:number\r\n    setCalculations:(value:boolean)=> void\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n\r\n\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n\r\n    return (<div style={{\r\n        display: \"flex\", width: \"fit-content\",\r\n        height: \"fit-content\",alignItems: \"center\",\r\n        justifyContent:\" center\"\r\n    }}>\r\n        {props.buttonsData.map((i) => {\r\n            const onUpdateButtonClick = (name: string, rating: number, grade: number, deckCover: string) => {\r\n                if (i.onClick) {\r\n                    i.onClick(props.id, name, rating, grade, deckCover)\r\n                }\r\n            }\r\n            let onclick = i.onClick\r\n\r\n            function Handler() {\r\n                if (onclick) onclick(props.id)\r\n            }\r\n\r\n            switch (i.name) {\r\n                case \"Delete\":\r\n                    return (deleteOpen ?\r\n                            <SimpleModal text={\"Do you want to delete pack?\"}\r\n                                         open={deleteOpen}\r\n                                         onButtonClick={Handler}\r\n                                         setModalOpen={setDeleteOpen}/>\r\n                            : <Button size={\"small\"}\r\n                                      style={buttonStyle}\r\n                                      variant=\"contained\" color=\"primary\"\r\n                                      onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Update\":\r\n                    return (update ?\r\n                            <SimpleUpdatePackInput text={\"Do you want to update pack?\"} open={update}\r\n                                                   onButtonClick={onUpdateButtonClick}\r\n                                                   setModalOpen={setUpdateOpen}/>\r\n                            : <Button size={\"small\"}\r\n                                      style={buttonStyle}\r\n                                      variant=\"contained\" color=\"primary\"\r\n                                      onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Cards\":\r\n                    return (<Button size={\"small\"}\r\n                                    style={buttonStyle}\r\n                                    variant=\"contained\" color=\"primary\"\r\n                                    onClick={Handler}>{i.name}</Button>)\r\n                case \"Play\":\r\n                    return (<Button size={\"small\"}\r\n                                    style={buttonStyle}\r\n                                    variant=\"contained\" color=\"primary\"\r\n                                    onClick={Handler}>{i.name}</Button>)\r\n            }\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    let TableStyle  = document.getElementById(\"Table\")\r\n    let TableWidth = \"\"\r\n    let TableHeight = \"\"\r\n    if (TableStyle) {\r\n        TableWidth = window.getComputedStyle(TableStyle).width\r\n        TableHeight = window.getComputedStyle(TableStyle).height\r\n        if(props.setCalculations)props.setCalculations(false)\r\n    }\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: any) => {\r\n            return <div style={{\r\n                width: `calc(${TableWidth}/${props.Content.length})`,\r\n                height: `calc(${TableHeight}/25)`\r\n            }}>{e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    // let rowData = []\r\n    let date =\"\"\r\n    // let MaxValue = props.rowsCount\r\n    // if(props.Data){\r\n    //     let countRenderItem = (props.Data.length - (( props.rowsCount*props.currentPage)-props.rowsCount))\r\n    //     if (countRenderItem < props.rowsCount) MaxValue = countRenderItem\r\n    // }\r\n    // let startValue =( MaxValue * props.currentPage ) - MaxValue\r\n    // let endValue = MaxValue * props.currentPage\r\n    // for (let i = startValue; i < endValue; i++) {\r\n    //     if (props.Data) rowData.push(props.Data[i])\r\n    // }\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i:PackType ) => {\r\n                if (i.updated.length > 11 ) date = i.updated.substring(0, 10)\r\n                else date = i.updated\r\n\r\n                return <ColumnsName\r\n                    Content={[i.name, i.cardsCount, date, i.grade,\r\n                        <Buttons id={i._id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForPacks(props: TablePropsType) {\r\n    const [calculations,setCalculations] = useState(true)\r\n    return (\r\n        <div className={style.Table} id={\"Table\"}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName} setCalculations={setCalculations}/>\r\n            </div>\r\n            { !calculations ? <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent}\r\n                            buttonsData={props.buttonsData}\r\n                            rowsCount={props.rowsCount}\r\n                            currentPage={props.currentPage}\r\n                />\r\n            </div>: <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForPacks;","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {CardType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {buttonStyle} from \"../a1-TableOfPacks/TablePacks\";\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data:any) => any\r\n}\r\n\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    cardId: string\r\n    PackId: string\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n    return (\r\n        <div style={{display:\"flex\"}}>\r\n            {props.buttonsData.map((i) => {\r\n                let onclick = i.onClick\r\n                switch (i.name) {\r\n                    case \"Delete\":\r\n                       const DeleteHandler = () => {if (onclick) onclick({cardId: props.cardId,packId: props.PackId})}\r\n                        return (<>\r\n                                <SimpleModal text={\"Do you want to delete pack?\"}\r\n                                             open={deleteOpen}\r\n                                             onButtonClick={DeleteHandler}\r\n                                             setModalOpen={setDeleteOpen}/>\r\n                                 <Button size={\"small\"}\r\n                                         style={buttonStyle}\r\n                                         variant=\"contained\"\r\n                                         color=\"primary\"\r\n                                         onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                    case \"Update\":\r\n                       const UpdateHandler = (question?:string) => {if (onclick) onclick({card: {_id:props.cardId, question:question},packId:props.PackId})}\r\n                        return (<>\r\n                                <SimpleModalInput text={\"Do you want to update pack?\"}\r\n                                                  open={update}\r\n                                                  onButtonClick={UpdateHandler}\r\n                                                  setModalOpen={setUpdateOpen}/>\r\n                                <Button size={\"small\"}\r\n                                        style={buttonStyle}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                }\r\n            })}\r\n        </div>)\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((i: any) => {\r\n            return <div style={{width:`calc(90vw/${props.Content.length})`}}>{i}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\ntype RowContentPropsType = {\r\n    Data: Array<CardType> | null\r\n    buttonsData: any\r\n}\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.question, i.answer, i.grade, i.updated,i.shots,\r\n                        <Buttons cardId={i._id} PackId={i.cardsPack_id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </>)\r\n}\r\n\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<CardType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\nfunction TableForCards(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TableForCards;\r\n","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function AddNewCardModal({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (question: string, answer:string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(question,answer)\r\n        setQuestion(\"\")\r\n        setAnswer(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [question, setQuestion] = useState<string>(\"\")\r\n    let [answer, setAnswer] = useState<string>(\"\")\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">Question:</p>\r\n            <TextField value={question} name={\"Name\"} onChange={(event) => setQuestion(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">Answer</p>\r\n            <TextField value={answer} name={\"Name\"} onChange={(event) => setAnswer(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Add\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardTC,\r\n    CardType,\r\n    deleteCardTC,\r\n    getCardsTC,\r\n    gradeCardTC,\r\n    updateCardTC\r\n} from \"../../../main/m2-bll/table-reduser\";\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport TableForCards from \"./TableCards\";\r\nimport {DeleteCardDataType, GradeCardDataType, UpdateCardDataType} from \"../../../main/m3-dal/tableApi\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport AddNewCardModal from \"../../../main/m1-ui/common/Modal/addNewCardModal\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\n\r\nfunction CardPage() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n    useEffect(() => {\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n    const addButton = (question: string, answer: string) => {\r\n        dispatch(addCardTC({card: {cardsPack_id: id, question: question, answer: answer}}))\r\n    }\r\n    const playButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const updateButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const deleteButton = (data: DeleteCardDataType) => {\r\n        dispatch(deleteCardTC(data))\r\n    }\r\n    const gradeButton = (data: GradeCardDataType) => {\r\n        dispatch(gradeCardTC(data))\r\n    }\r\n    let [addCardModalOpen, setAddCardModalOpen] = useState<boolean>(false)\r\n    return <div>\r\n        {!CardsData ? <Preloader/> : <div>\r\n            <AddNewCardModal text={\"Do you want to create new card?\"}\r\n                             open={addCardModalOpen}\r\n                             onButtonClick={addButton}\r\n                             setModalOpen={setAddCardModalOpen}/>:\r\n            <TableForCards columnsName={[\"question\", \"answer\", \"Grade\", \"updated\", \"Shots\",\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setAddCardModalOpen(true)}>Add new card</Button>]}\r\n                           rowContent={CardsData}\r\n                           buttonsData={[\r\n                               {name: \"Update\", onClick: updateButton},\r\n                               {name: \"Delete\", onClick: deleteButton},\r\n                               {name: \"Grade\", onClick: gradeButton},\r\n                               {name: \"Play\", onClick: playButton},]}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default CardPage;","import React from \"react\";\r\nimport CardPage from \"../../../features/f2-table/a2-TableOfCards/CardsPage\";\r\n\r\n\r\nfunction CardsPage() {\r\n\r\n    return <CardPage/>\r\n}\r\n\r\nexport default CardsPage;","import React, {useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\n\r\ntype PaginatorPropsType ={\r\n    maxPages: number\r\n    startValue: number\r\n    endValue:number\r\n    goStart : () => void\r\n    goFinish : () => void\r\n    goPage : (value:number) => void\r\n}\r\nconst Paginator = (props:PaginatorPropsType) => {\r\n    let i =props.startValue\r\n    let buttons: Array<any> = []\r\n    for ( i;i <= props.maxPages;i++ ) {\r\n    buttons[i] = i}\r\n    return (\r\n        <div className={style.Main}>\r\n        <div className={style.Pagination}>\r\n            <button className={style.startButton} onClick={props.goStart}>Start</button>\r\n            {buttons.map((b)=>{\r\n                let goPage = props.goPage\r\n                function Handler(){goPage(b)}\r\n                if (b <= props.endValue) return <button onClick={Handler}>{b}</button>\r\n            })}\r\n            <button className={style.endButton} onClick={props.goFinish}>End</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React, {useState} from 'react';\r\nimport InputRange, {Range} from \"react-input-range\";\r\nimport \"react-input-range/lib/css/index.css\"\r\n\r\ntype RangeSliderPropsType ={\r\n    value: Range | number\r\n    setValue: (value:Range| number) => void\r\n}\r\nexport function RangeSlider(props:RangeSliderPropsType) {\r\n\r\n    return (\r\n        <InputRange\r\n            draggableTrack\r\n            maxValue={20}\r\n            minValue={0}\r\n            value={props.value}\r\n            onChange={value => {props.setValue(value)}} />\r\n    );}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {\r\n    addPackTC,\r\n    deletePackTC,\r\n    getPacksTC,\r\n    PackType,\r\n    PaginatorType,\r\n    setCurrentPagerAC, setEndPagePaginatorAC, setStartPagePaginatorAC,\r\n    updatePackTC\r\n} from \"../../../main/m2-bll/table-reduser\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport TableForPacks from \"./TablePacks\";\r\nimport Paginator from \"../../../main/m1-ui/common/Paginator/Paginator\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {userDate} from \"../../../main/m2-bll/auth-reducer\";\r\nimport {RangeSlider} from \"../a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch\";\r\n\r\n\r\nfunction PackPage() {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.table.isLoading)\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.allPacks);\r\n    const paginatorData = useSelector<AppRootStateType, PaginatorType>(state => state.table.paginator);\r\n    const [valueSearch, setValueSearch] = useState<string>(\"\")\r\n    const {_id} = useSelector<AppRootStateType, userDate>(state => state.auth.UserData);\r\n    const [valueRange, setValueRange] = useState<any>({min: 0, max: 20})\r\n    const [calculations,setCalculations] = useState(true)\r\n    let maxPages = Math.ceil(paginatorData.packsCount / 25)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC({pageCount: 22, page: 1}))\r\n    }, [])\r\n    const playButton = (id: string) => {\r\n        history.push(`/play/${id}`)\r\n    }\r\n    const addButton = (name: string) => {\r\n        dispatch(addPackTC({cardsPack: {name: name}}, {page: paginatorData.currentPage}))\r\n    }\r\n    const deleteButton = (id: string) => {\r\n        dispatch(deletePackTC(id, {page: paginatorData.currentPage}))\r\n    }\r\n    const updateButton = (id: string, name?: string, rating: number = 0, grade: number = 0, deckCover: string = \"\") => {\r\n        dispatch(updatePackTC({cardsPack: {_id: id, name: name, rating: rating}}, {page: paginatorData.currentPage}))\r\n    }\r\n    const cardsButton = (id: string) => {\r\n        history.push(`/Cards/${id}`)\r\n    }\r\n    const goStart = () => {\r\n        if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: 1, packName: valueSearch}))\r\n        else dispatch(getPacksTC({pageCount: 22, page: 1}))\r\n        dispatch(setCurrentPagerAC(1))\r\n        dispatch(setStartPagePaginatorAC(1))\r\n        dispatch(setEndPagePaginatorAC(maxPages))\r\n    }\r\n    const goFinish = () => {\r\n        if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: maxPages, packName: valueSearch}))\r\n        else dispatch(getPacksTC({pageCount: 22, page: maxPages}))\r\n        dispatch(setCurrentPagerAC(maxPages))\r\n        if (maxPages < 5) return\r\n        dispatch(getPacksTC({pageCount: 22, page: maxPages}))\r\n        dispatch(setStartPagePaginatorAC(maxPages - 4))\r\n        dispatch(setEndPagePaginatorAC(maxPages))\r\n    }\r\n    const searchChangeValue = (e: any) => {\r\n        setValueSearch(e.currentTarget.value)\r\n    }\r\n    const goSearchName = (e: any) => {\r\n        dispatch(getPacksTC({pageCount: 22, page: 1, packName: valueSearch, max: valueRange.max, min: valueRange.min}))\r\n    }\r\n    const goSearchCards = (value: any) => {\r\n        setValueRange(value)\r\n    }\r\n    const goPage = (value: number) => {\r\n        if (value === paginatorData.endPage) {\r\n            if (value === maxPages) {\r\n                dispatch(setCurrentPagerAC(value))\r\n                if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n                dispatch(getPacksTC({pageCount: 22, page: value}))\r\n                return\r\n            }\r\n            dispatch(setStartPagePaginatorAC(value))\r\n            dispatch(setEndPagePaginatorAC(value + 4))\r\n            dispatch(setCurrentPagerAC(value))\r\n            if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n            else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n            return\r\n        } else if (value === paginatorData.startPage) {\r\n            if (value === 1) {\r\n                dispatch(setCurrentPagerAC(value))\r\n                if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n                else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n                return\r\n            }\r\n            dispatch(setStartPagePaginatorAC(value - 4))\r\n            dispatch(setEndPagePaginatorAC(value))\r\n            dispatch(setCurrentPagerAC(value))\r\n            if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n            else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n\r\n            return\r\n        }\r\n        dispatch(setCurrentPagerAC(value))\r\n        if (valueSearch.length >= 1) dispatch(getPacksTC({pageCount: 22, page: value, packName: valueSearch}))\r\n        else dispatch(getPacksTC({pageCount: 22, page: value}))\r\n    }\r\n    const getAllPacks = () => {\r\n        dispatch(getPacksTC({pageCount: 22, page: 1}))\r\n        setValueSearch(\"\")\r\n    }\r\n    const getMyPacks = (e: any) => {\r\n        if (e.currentTarget.checked) dispatch(getPacksTC({pageCount: 22, user_id: _id}))\r\n        else dispatch(getPacksTC({pageCount: 22}))\r\n\r\n    }\r\n    let [addOpen, setAddModalOpen] = useState(false)\r\n    return (<div className={style.Main}>\r\n            {!PacksData && isLoading && !calculations ? <Preloader/> :\r\n                <>\r\n                    <SimpleModalInput text={\"Do you want to create new pack?\"}\r\n                                      open={addOpen}\r\n                                      onButtonClick={addButton}\r\n                                      setModalOpen={setAddModalOpen}/>\r\n                    <div className={style.SearchPanel}>\r\n                        <div className={style.desktopPanel}>\r\n                            <button onClick={getAllPacks} className={style.refresh}></button>\r\n                            <div><input type=\"checkbox\" onChange={getMyPacks}/><br />My Packs</div>\r\n                            <div><input value={valueSearch} onChange={searchChangeValue} placeholder={\"\\n\" +\r\n                            \"Enter a value to search\"}/></div>\r\n                            <div className={style.slider}><RangeSlider value={valueRange} setValue={goSearchCards}/></div>\r\n                            <button onClick={goSearchName}>Search</button>\r\n                        </div>\r\n                        <div className={style.mobilePanel}>\r\n                            <div className={style.firstBlock}>\r\n                                <div><input value={valueSearch} onChange={searchChangeValue} placeholder={\"\\n\" +\r\n                                \"Enter a value to search\"}/></div>\r\n                                <div className={style.slider}><RangeSlider value={valueRange} setValue={goSearchCards}/></div>\r\n                                <button onClick={goSearchName}>Search</button>\r\n                            </div>\r\n                            <div className={style.secondBlock}>\r\n                                <button onClick={getAllPacks} className={style.refresh}/>Refresh\r\n                                <div><input type=\"checkbox\" onChange={getMyPacks}/>My Packs</div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <TableForPacks\r\n                        columnsName={[\"Name\", \"Cards\", \"Last update\", \"Grade\",\r\n                            <Button size={\"small\"}\r\n                                    style={{margin: \"5px\", height: \" 20px\"}}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => setAddModalOpen(true)}>New</Button>]}\r\n                        rowContent={PacksData}\r\n                        buttonsData={[\r\n                            {name: \"Update\", onClick: updateButton},\r\n                            {name: \"Delete\", onClick: deleteButton},\r\n                            {name: \"Cards\", onClick: cardsButton},\r\n                            {name: \"Play\", onClick: playButton},]}\r\n                        rowsCount={22}\r\n                        currentPage={paginatorData.currentPage}\r\n                        setCalculations={setCalculations}/>\r\n                    <Paginator maxPages={maxPages}\r\n                               endValue={paginatorData.endPage}\r\n                               startValue={paginatorData.startPage}\r\n                               goFinish={goFinish}\r\n                               goPage={goPage}\r\n                               goStart={goStart}/>\r\n                </>\r\n            }\r\n\r\n            <ErrorSnackbar/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PackPage;","import React from \"react\";\r\nimport PackPage from \"../../../features/f2-table/a1-TableOfPacks/PacksPage\";\r\n\r\n\r\n\r\n\r\nfunction PacksPage() {\r\n\r\n    return <PackPage/>\r\n}\r\n\r\nexport default PacksPage;","import React, {useEffect, useRef, useState} from 'react';\r\n\r\ninterface IFileInputProps {\r\n    fileURL: string;\r\n}\r\n\r\nconst Video: React.FC<IFileInputProps> = ({fileURL}) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    const [duration, setDuration] = useState();\r\n    const [controls, setControls] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDuration(videoRef && videoRef.current && videoRef.current.duration);\r\n            if (videoRef && videoRef.current && videoRef.current.currentTime === videoRef.current.duration) {\r\n                videoRef.current.currentTime = 0;\r\n                videoRef.current.play();\r\n            }\r\n            setCurrentTime(videoRef && videoRef.current && videoRef.current.currentTime);\r\n        }, 300);\r\n    }, []);\r\n\r\n    const makeFullScreen = () => {\r\n        if (videoRef && videoRef.current)\r\n            if (videoRef.current.requestFullscreen) {\r\n                videoRef.current.requestFullscreen();\r\n            } else {\r\n                console.log(\"Fullscreen API is not supported\");\r\n            }\r\n    };\r\n\r\n    // videoRef.current!.height\r\n\r\n    const play = () => videoRef && videoRef.current && videoRef.current.play();\r\n    const pause = () => videoRef && videoRef.current && videoRef.current.pause();\r\n    const volumeUp = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume < 0.9) videoRef.current.volume += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 1);\r\n    };\r\n    const volumeDown = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume > 0.1) videoRef.current.volume -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 0);\r\n    };\r\n    const currentTimeUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime < videoRef.current.duration - 0.3) videoRef.current.currentTime += 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = videoRef.current.duration);\r\n    };\r\n    const currentTimeDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime > 0.3) videoRef.current.currentTime -= 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const playbackRateUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate < 100) videoRef.current.playbackRate += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 100);\r\n    };\r\n    const playbackRateDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate > 0.2) videoRef.current.playbackRate -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 0.2);\r\n    };\r\n    const stop = () => {\r\n        videoRef && videoRef.current && videoRef.current.pause();\r\n        videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const width100 = () => {\r\n        videoRef && videoRef.current && (videoRef.current.width = 100);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexFlow: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            Video\r\n            <label>\r\n                controls\r\n                <input type={'checkbox'} checked={controls} onChange={e => setControls(e.currentTarget.checked)}/>\r\n            </label>\r\n            <video\r\n                src={fileURL}\r\n                width={'300px'}\r\n                controls={controls}\r\n                ref={videoRef}\r\n            />\r\n            <div>\r\n                <button onClick={play}>play</button>\r\n                <button onClick={pause}>pause</button>\r\n                <button onClick={makeFullScreen}>makeFullScreen</button>\r\n                <button onClick={volumeUp}>volumeUp</button>\r\n                <button onClick={volumeDown}>volumeDown</button>\r\n                <button onClick={currentTimeUp}>currentTimeUp</button>\r\n                <button onClick={currentTimeDown}>currentTimeDown</button>\r\n                <button onClick={stop}>stop</button>\r\n                <button onClick={playbackRateUp}>playbackRateUp</button>\r\n                <button onClick={playbackRateDown}>playbackRateDown</button>\r\n                <button onClick={width100}>width100</button>\r\n            </div>\r\n            duration: {duration} currentTime: {currentTime}\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/1P2ov_oidRQ\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport Video from \"./Video\";\r\nimport {getFile, writeFile} from \"./getFile\";\r\n\r\ninterface IFileInputProps {\r\n\r\n}\r\n\r\nconst Files: React.FC<IFileInputProps> = () => {\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(false);\r\n    const [base64, setBase64] = useState(true); // base64 - true, text - false\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [fileData, setFileData] = useState();\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // e.preventDefault();\r\n        const reader = new FileReader();\r\n        const formData = new FormData(); // for send to back\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) { // reader\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n                };\r\n\r\n                if (base64) reader.readAsDataURL(newFile);\r\n                else reader.readAsText(newFile);\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () => {\r\n        const response = axios.post('https://dry-forest-56016.herokuapp.com/file', fileData);\r\n        console.log(response)\r\n    };\r\n\r\n    const returnFileSize = (n: number) => {\r\n        if (n < 1024) {\r\n            return n + 'bytes';\r\n        } else if (n > 1024 && n < 1048576) {\r\n            return (n / 1024).toFixed(2) + 'KB';\r\n        } else if (n > 1048576) {\r\n            return (n / 1048576).toFixed(2) + 'MB';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            FileInput\r\n\r\n            <input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <label>\r\n                reader\r\n                <input type={'checkbox'} checked={code} onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </label>\r\n            <label>\r\n                base64\r\n                <input type={'checkbox'} checked={base64} onChange={e => setBase64(e.currentTarget.checked)}/>\r\n            </label>\r\n\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>lastModified: {file && file.lastModified}</div>\r\n            <div>size: {file && returnFileSize(file.size)}</div>\r\n            <div>type: {file && file.type}</div>\r\n\r\n            <input\r\n                ref={inRef}\r\n                type={'file'}\r\n                style={{display: 'none'}}\r\n                onChange={upload}\r\n            />\r\n            <button onClick={() => inRef && inRef.current && inRef.current.click()}>add</button>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            <pre>{file64}</pre>\r\n            <div>\r\n                <button onClick={() => writeFile('Text.txt', text + `\\r\\n` + file64)}>save</button>\r\n                <button onClick={send}>send</button>\r\n                <button onClick={() => getFile(\"https://dry-forest-56016.herokuapp.com\" + 'file', 'newFile.jpg')}>get</button>\r\n            </div>\r\n\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <Video fileURL={fileURL}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Files;","import axios from 'axios';\r\n\r\nexport const getFile = (url: string, fileName: string) => {\r\n    // запросить файл\r\n    axios.get(url, {responseType: 'blob'}) // !!! responseType: 'blob'\r\n        .then(({data}) => {\r\n            const blob = new Blob([data], {type : 'image/jpeg'});\r\n            console.log(blob)\r\n\r\n            // создать ссылку на файл\r\n            const downloadUrl = window.URL.createObjectURL(blob);\r\n\r\n            // создать тег \"ссылка\" на наш файл\r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n\r\n            // добавить атрибуты нашему тегу: загрузочный, имя файла\r\n            link.setAttribute('download', fileName);\r\n\r\n            // добавить тег в документ\r\n            document.body.appendChild(link);\r\n\r\n            // нажать на ссылку\r\n            link.click();\r\n\r\n            // удалить тег из документа\r\n            link.remove();\r\n        });\r\n};\r\n\r\nexport const writeFile = (fileName: string, value: string) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = \"data:text/plain;content-disposition=attachment;filename=file,\" + value;\r\n    link.download = fileName;\r\n    link.style.display = \"none\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n};","import React from \"react\";\r\nimport style from \"./css.module.css\"\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\ntype StarReadPropsType ={\r\n    value:number\r\n}\r\ntype StarChangePropsType ={\r\n    value:number\r\n    setValue: (value:any) => void\r\n}\r\n\r\nexport const StarRead= (props:StarReadPropsType) => {\r\n    return (<Box component=\"fieldset\" mb={0} borderColor=\"transparent\">\r\n    <Rating name=\"read-only\" value={props.value} size={\"large\"} readOnly />\r\n    </Box>)\r\n}\r\nexport const StarChange= (props:StarChangePropsType) => {\r\n    return (<Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Rating name=\"simple-controlled\"\r\n                value={props.value}\r\n                onChange={(event, newValue) => {\r\n                    props.setValue(newValue)}}/>\r\n    </Box>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {StarChange} from \"../../main/m1-ui/common/Star/Star\";\r\nimport style from \"./css.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {gradeCardTC} from \"../../main/m2-bll/table-reduser\";\r\n\r\ntype CardsControlButtonsPropsType = {\r\n    cardId: any\r\n    closeAnswer: () => void\r\n}\r\n\r\nexport function CardsControlButtons(props: CardsControlButtonsPropsType) {\r\n    const [value, setValue] = useState<1|2|3|4|5>(1)\r\n    const dispatch = useDispatch()\r\n\r\n    const nextCard = () => {\r\n        dispatch(gradeCardTC({grade: value, card_id: props.cardId}))\r\n        setValue(1)\r\n        props.closeAnswer()\r\n    }\r\n    return (\r\n        <div className={style.controlButton}>\r\n            <div className={style.buttonNext}>\r\n                <button onClick={nextCard}>Next Card</button>\r\n            </div>\r\n            Choose how well you answered the question\r\n            <div className={style.starsGo}>\r\n                <StarChange value={value} setValue={setValue}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport style from \"./css.module.css\"\r\nimport {StarRead} from \"../../main/m1-ui/common/Star/Star\";\r\n\r\ntype CardsSideQPropsType = {\r\n    currentCard: NewCardType | any\r\n    ansVisibility:boolean\r\n    openAnswer: ()=> void\r\n}\r\ntype NewCardType = {\r\n    number: number\r\n    question: string\r\n    answer: string\r\n    grade: number\r\n}\r\nexport const Card= (props: CardsSideQPropsType) => {\r\nreturn (<div className={style.cardPack}>\r\n    <div className={style.cardBorder}>\r\n        <div className={style.stars}><StarRead value={props.currentCard.grade}/></div>\r\n        <div className={style.question}>Question:<br/>{props.currentCard.question} ?</div>\r\n        <div className={style.answer}><button onClick={props.openAnswer}>{props.ansVisibility ? `${props.currentCard.answer}` : \"Open answer\"}</button></div>\r\n    </div>\r\n</div>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    CardType,\r\n    getCardsTC,\r\n} from \"../../main/m2-bll/table-reduser\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../main/m2-bll/store\";\r\nimport style from \"./css.module.css\"\r\nimport {Preloader} from \"../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {CardsControlButtons} from \"./CardsControlButtons\";\r\nimport { Card } from \"./Card\";\r\n\r\n\r\n\r\nfunction Play() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n    const [ansVisibility,setAnsVisibility] = useState(false)\r\n\r\n\r\n    const openAnswer = () => {\r\n        setAnsVisibility(true)\r\n        setTimeout (()=> {  setAnsVisibility(false)},5000)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n    const distributionCardOfGrade = () => {\r\n        const a = Math.round(Math.random() * (100 - 1) + 1)\r\n        if (a >= 1 && a <= 40) {\r\n            return 1\r\n        } else if (a >= 41 && a <= 70) {\r\n            return 2\r\n        } else if (a >= 71 && a <= 85) {\r\n            return 3\r\n        } else if (a >= 86 && a <= 95) {\r\n            return 4\r\n        } else if (a >= 96 && a <= 100) {\r\n            return 5\r\n        }\r\n        else {return 1}\r\n    }\r\n    const currentCardForDraw = (rollGrade:() => 1|2|3|4|5, data: Array<CardType>):CardType => {\r\n        const FilterArray = data.map((card)=> {\r\n            if (card.grade === 0 ) card.grade = 1\r\n            return card\r\n        })\r\n        let cards:Array<any> = []\r\n        while (cards.length < 1)\r\n        {\r\n            let grade  = rollGrade()\r\n            cards = FilterArray.filter((card) => {\r\n                if (Math.round(card.grade) === grade) return card\r\n            })\r\n\r\n        }\r\n            if (cards.length === 1) {return cards[0]}\r\n            const a = Math.round(Math.random() * (cards.length - 2) + 1)\r\n            return cards[a]\r\n    }\r\n    let card = null\r\n    if(CardsData)if(CardsData.length >= 1) card = currentCardForDraw(distributionCardOfGrade,CardsData?CardsData:[])\r\n\r\n\r\n    return <div className={style.Content}>\r\n        {CardsData && card ?\r\n            <>\r\n                <div ><Card currentCard={card} ansVisibility={ansVisibility} openAnswer={openAnswer}/></div>\r\n                <div ><CardsControlButtons cardId={card._id} closeAnswer={()=>setAnsVisibility(false)}/></div>\r\n            </> : <div>Этот пак пуст !</div>}\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Play;","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, profileUpdatePhoto} from \"../m3-dal/login-api\";\r\nimport {authMeTC, setIsLoggedInAC, setUsersDataAC} from \"./auth-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isInitialized: false\r\n}\r\n\r\nexport const ProfileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n// thunk\r\n\r\nexport const changeUserDataTC = (data:profileUpdatePhoto) => (dispatch: ThunkDispatch) => {\r\n    authAPI.profileUpdatePhoto(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data.updatedUser))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\ntype InitialStateType = {\r\n    isInitialized: boolean,\r\n\r\n}\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {userDate} from \"../../m2-bll/auth-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {changeUserDataTC} from \"../../m2-bll/profile-reducer\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        height: '15vh',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction SettingsPage() {\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    const loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const {name,avatar} = useSelector<AppRootStateType,userDate>(state => state.auth.UserData);\r\n\r\n    const updateProfile = (name: string, newAvatar: string) => {\r\n        dispatch(changeUserDataTC({name: name, avatar: newAvatar}))\r\n    }\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            if (!values.name) {\r\n                return {\r\n                    email: 'Please enter your new name'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            name: name,\r\n            avatar: avatar,\r\n        },\r\n        onSubmit: values => {\r\n            debugger\r\n            dispatch(changeUserDataTC({name: values.name, avatar: values.avatar}))\r\n        },\r\n    });\r\n    return (loading ? <Preloader/> :\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Change your name\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            autoComplete=\"name\"\r\n                            label=\"Name\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('name')}\r\n                        />\r\n                        {formik.errors.name ? <div>{formik.errors.name}</div> : null}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Change your avatar\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"avatar\"\r\n                            name=\"avatar\"\r\n                            autoComplete=\"avatar\"\r\n                            label=\"Url for your avatar\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('avatar')}\r\n                        />\r\n                        {formik.errors.name ? <div>{formik.errors.avatar}</div> : null}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <ErrorSnackbar/>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect} from \"react-router-dom\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport HeaderNavbar from \"./header/HeaderNavbar\";\r\nimport CardsPage from \"./pages/CardsPage\";\r\nimport PacksPage from \"./pages/PacksPage\";\r\nimport Files from \"./pages/File/Files\";\r\nimport Play from \"../../features/f3-play/Play\";\r\nimport SettingsPage from \"./pages/SettingPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\n\r\nfunction Content() {\r\n    const dispatch = useDispatch()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state=>state.profilePage.isInitialized);\r\n    if (!isLoginIn && isInitialized) return <Redirect to=\"/login\"/>\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Container\"></div>\r\n            <HeaderNavbar/>\r\n                <Switch>\r\n                <Route exact path=\"/settings\" render={() => (<SettingsPage/>)}/>\r\n                <Route exact path={\"/profile\"} render={() => (<ProfilePage/>)}/>\r\n                <Route exact path=\"/Cards/:id\" render={() => (<CardsPage/>)}/>\r\n                <Route exact path=\"/Packs\" render={() => (<PacksPage/>)}/>\r\n                <Route exact path=\"/files\" render={() => (<Files/>)}/>\r\n                <Route exact path=\"/play/:id\" render={() => (<Play/>)}/>\r\n                </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport RegistrationPage from \"./pages/RegistrationPage\";\r\nimport PasswordResetPage from \"./pages/PasswordResetPage\";\r\nimport PasswordGenerationPage from \"./pages/PasswordGenerationPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\nimport Content from \"./Content\";\r\nimport {} from \"../m2-bll/profile-reducer\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {isInitializedTC} from \"../m2-bll/auth-reducer\";\r\n\r\nfunction App() {\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state=>state.auth.isInitialized);\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(isInitializedTC())\r\n    },[])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialized ? <Switch>\r\n                <Route exact path=\"/registration\" render={() => (<RegistrationPage/>)}/>\r\n                <Route exact path=\"/password-reset\" render={() => (<PasswordResetPage/>)}/>}\r\n                <Route exact path=\"/password-generation/:id\" render={() => (<PasswordGenerationPage/>)}/>\r\n                <Route exact path=\"/password-generation\" render={() => (<h1>We send to your mail link for password change. Use it!</h1>)}/>\r\n                <Route exact path={[\"/login\",\"/\"]} render={() => (<LoginPage/>)}/>\r\n                <Route path=\"/\" render={() => (<Content/>)}/>\r\n            </Switch>: <Preloader/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer'\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {passwordResetReducer} from \"./password-reset-reducer\";\r\nimport {passwordGenerationReducer} from \"./password-gereration-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {ProfileReducer} from \"./profile-reducer\";\r\nimport {tableReducer} from \"./table-reduser\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    registrationPage: registrationReducer,\r\n    passwordResetPage: passwordResetReducer,\r\n    passwordGenerationPage: passwordGenerationReducer,\r\n    profilePage: ProfileReducer,\r\n    auth:authReducer,\r\n    table:tableReducer,\r\n\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/m1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/m2-bll/store\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport LoginPage from \"./main/m1-ui/pages/LoginPage\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <HashRouter basename={\"\"}>\r\n          <App />\r\n          </HashRouter>\r\n      </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__1qlRy\",\"HeaderTable\":\"css_HeaderTable__1C8MH\",\"ContentTable\":\"css_ContentTable__3Gs9S\",\"Content\":\"css_Content__1PBs8\",\"rowContent\":\"css_rowContent__DlWhb\",\"button\":\"css_button__L7RDT\",\"SearchPanel\":\"css_SearchPanel__mSLmd\",\"desktopPanel\":\"css_desktopPanel__3hGAG\",\"slider\":\"css_slider__3VDAS\",\"refresh\":\"css_refresh__3NEUP\",\"mobilePanel\":\"css_mobilePanel__2ZP9q\",\"Container\":\"css_Container___9qL2\",\"firstBlock\":\"css_firstBlock__3F4WY\",\"secondBlock\":\"css_secondBlock__14xAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"css_Content__2P2QR\",\"cardPack\":\"css_cardPack__xcxHD\",\"cardBorder\":\"css_cardBorder__3xEAY\",\"stars\":\"css_stars___ZAew\",\"question\":\"css_question__zDtmV\",\"controlButton\":\"css_controlButton__1auA7\",\"buttonNext\":\"css_buttonNext__3Dvon\",\"answer\":\"css_answer__dd93R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"headerNavbar_Navbar___4Fny\",\"NavbarItem\":\"headerNavbar_NavbarItem__MmKcW\",\"Active\":\"headerNavbar_Active__2_cqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"styleProfilaPage_MainContainer__1lOMd\",\"Photo\":\"styleProfilaPage_Photo__3Ih8k\",\"ProfileInfo\":\"styleProfilaPage_ProfileInfo__2NmHE\",\"InfoItem\":\"styleProfilaPage_InfoItem__31XWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__3mPVZ\",\"HeaderTable\":\"css_HeaderTable__2HQ2n\",\"ContentTable\":\"css_ContentTable__3Z9es\",\"Content\":\"css_Content__RqQH3\",\"rowContent\":\"css_rowContent__1mhNg\",\"button\":\"css_button__2ME-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__2oyNA\",\"HeaderTable\":\"css_HeaderTable__1H9aY\",\"ContentTable\":\"css_ContentTable__adJtZ\",\"rowItem\":\"css_rowItem__3_M2M\",\"Content\":\"css_Content__1OcHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"css_Main__2sYxk\",\"Pagination\":\"css_Pagination__2-Edu\",\"startButton\":\"css_startButton__2v3dc\",\"endButton\":\"css_endButton__1VYrK\"};"],"sourceRoot":""}